Index: app/src/main/java/com/example/chatapplication/GroupProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.chatapplication;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.Models.Friend;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.databinding.ActivityGroupProfileBinding;\r\nimport com.firebase.ui.database.FirebaseRecyclerAdapter;\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\npublic class GroupProfile extends AppCompatActivity {\r\n    ActivityGroupProfileBinding binding;\r\n    private TextView mTextView;\r\n    String groupName;\r\n    String groupId;\r\n    String groupIcon;\r\n    String groupDesc;\r\n    String groupAdminId;\r\n    String currentUserId;\r\n    private DatabaseReference memRef;\r\n    private DatabaseReference usersRef;\r\n    RecyclerView memberList;\r\n    Context context;\r\n    Toolbar toolbar;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityGroupProfileBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        //getSupportActionBar().hide();\r\n        memberList = (RecyclerView) findViewById(R.id.chatRecyclerView);\r\n        memberList.setLayoutManager(new LinearLayoutManager(this));\r\n        toolbar = (Toolbar) findViewById(R.id.toolbar);\r\n        //setSupportActionBar(toolbar);\r\n        groupId = getIntent().getStringExtra(\"groupId\");\r\n        groupName = getIntent().getStringExtra(\"groupName\");\r\n        groupIcon = getIntent().getStringExtra(\"groupIcon\");\r\n        groupDesc = getIntent().getStringExtra(\"groupDesc\");\r\n        groupAdminId = getIntent().getStringExtra(\"groupAdminId\");\r\n        context = this;\r\n        currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n        memRef = FirebaseDatabase.getInstance().getReference().child(\"GroupMembers\").child(groupId);\r\n        usersRef = FirebaseDatabase.getInstance().getReference().child(\"Users\");\r\n\r\n        binding.groupname.setText(groupName);\r\n        Picasso.get().load(groupIcon).placeholder(R.drawable.avatar).into(binding.groupicon);\r\n        binding.desc.setText(groupDesc);\r\n        FirebaseRecyclerOptions options = new FirebaseRecyclerOptions.Builder<Friend>()\r\n                .setQuery(memRef, Friend.class).build();\r\n\r\n        FirebaseRecyclerAdapter<Friend, GroupProfile.FriendViewHolder> adapter = new FirebaseRecyclerAdapter<Friend, GroupProfile.FriendViewHolder>(options) {\r\n            @Override\r\n            protected void onBindViewHolder(@NonNull GroupProfile.FriendViewHolder holder, int position, @NonNull Friend model) {\r\n                String usersIds = getRef(position).getKey();\r\n                final Users[] users = {new Users()};\r\n                usersRef.child(usersIds).addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        users[0] = snapshot.getValue(Users.class);\r\n                        /*String profilePic = snapshot.child(\"profilepic\").getValue().toString();\r\n                        String username = snapshot.child(\"userName\").getValue().toString();\r\n*/\r\n                        holder.userName.setText(users[0].getUserName());\r\n                        Picasso.get().load(users[0].getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n               holder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n                    @Override\r\n                    public boolean onLongClick(View v) {\r\n                        if(currentUserId.equals(groupAdminId)) {\r\n                            holder.itemView.setBackgroundColor(Color.CYAN);\r\n                            new AlertDialog.Builder(context).setTitle(\"Remove\").setMessage(\"Press YES to remove this member from group...\")\r\n                                    .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                                        @Override\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n                                            FirebaseDatabase.getInstance().getReference().child(\"UsersGroups\")\r\n                                                    .child(users[0].getUserId()).child(groupId).setValue(null);\r\n                                            FirebaseDatabase.getInstance().getReference().child(\"GroupMembers\")\r\n                                                    .child(groupId).child(users[0].getUserId()).setValue(null);\r\n                                        }\r\n                                    }).setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();;\r\n                                }\r\n                            }).show();\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            @NonNull\r\n            @Override\r\n            public GroupProfile.FriendViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.sample_show_user,parent,false);\r\n                GroupProfile.FriendViewHolder viewHolder = new GroupProfile.FriendViewHolder(view);\r\n                return viewHolder;\r\n            }\r\n        };\r\n        memberList.setAdapter(adapter);\r\n        adapter.startListening();\r\n\r\n        binding.backArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(GroupProfile.this, GroupChatActivity.class);\r\n                intent.putExtra(\"groupId\", groupId);\r\n                intent.putExtra(\"groupIcon\", groupIcon);\r\n                intent.putExtra(\"groupName\", groupName);\r\n                intent.putExtra(\"groupDesc\", groupDesc);\r\n                intent.putExtra(\"groupAdminId\", groupAdminId);\r\n                //intent.putExtra(\"groupObject\", (Serializable) group[0]);\r\n                GroupProfile.this.startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n    public static class FriendViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView image;\r\n        TextView userName, lastMessage;\r\n\r\n        public FriendViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            image = itemView.findViewById(R.id.profile_image);\r\n            userName = itemView.findViewById(R.id.userNameList);\r\n            lastMessage = itemView.findViewById(R.id.lastMessage);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.groupmenu, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.addMember:\r\n                //Intent intent2 = new Intent(GroupProfile.this, .class);\r\n                //startActivity(intent2);\r\n                break;\r\n            case R.id.leaveGroup:\r\n                Intent intent4 = new Intent(GroupProfile.this, MainActivity.class);\r\n                startActivity(intent4);\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/chatapplication/GroupProfile.java	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
+++ app/src/main/java/com/example/chatapplication/GroupProfile.java	(date 1619809097814)
@@ -14,6 +14,7 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
@@ -22,6 +23,7 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.chatapplication.Models.Friend;
+import com.example.chatapplication.Models.Group;
 import com.example.chatapplication.Models.Users;
 import com.example.chatapplication.databinding.ActivityGroupProfileBinding;
 import com.firebase.ui.database.FirebaseRecyclerAdapter;
@@ -35,6 +37,8 @@
 import com.google.firebase.database.ValueEventListener;
 import com.squareup.picasso.Picasso;
 
+import java.util.ArrayList;
+
 public class GroupProfile extends AppCompatActivity {
     ActivityGroupProfileBinding binding;
     private TextView mTextView;
@@ -44,11 +48,13 @@
     String groupDesc;
     String groupAdminId;
     String currentUserId;
+    ArrayList<String> groupMembers;
     private DatabaseReference memRef;
     private DatabaseReference usersRef;
     RecyclerView memberList;
     Context context;
     Toolbar toolbar;
+    Group group;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -73,6 +79,19 @@
         binding.groupname.setText(groupName);
         Picasso.get().load(groupIcon).placeholder(R.drawable.avatar).into(binding.groupicon);
         binding.desc.setText(groupDesc);
+        FirebaseDatabase.getInstance().getReference().child("GroupsMeta").child(groupId)
+                .addListenerForSingleValueEvent(new ValueEventListener() {
+                    @Override
+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
+                        group = snapshot.getValue(Group.class);
+                        groupMembers = group.getGroupMembers();
+                    }
+
+                    @Override
+                    public void onCancelled(@NonNull DatabaseError error) {
+
+                    }
+                });
         FirebaseRecyclerOptions options = new FirebaseRecyclerOptions.Builder<Friend>()
                 .setQuery(memRef, Friend.class).build();
 
@@ -106,10 +125,19 @@
                                     .setPositiveButton("YES", new DialogInterface.OnClickListener() {
                                         @Override
                                         public void onClick(DialogInterface dialog, int which) {
-                                            FirebaseDatabase.getInstance().getReference().child("UsersGroups")
-                                                    .child(users[0].getUserId()).child(groupId).setValue(null);
-                                            FirebaseDatabase.getInstance().getReference().child("GroupMembers")
-                                                    .child(groupId).child(users[0].getUserId()).setValue(null);
+                                            if(currentUserId.equals(users[0].getUserId())) {
+                                                Toast.makeText(GroupProfile.this, "Group Admin can't leave currently", Toast.LENGTH_SHORT).show();
+                                            }
+                                            else {
+                                                FirebaseDatabase.getInstance().getReference().child("UsersGroups")
+                                                        .child(users[0].getUserId()).child(groupId).setValue(null);
+                                                FirebaseDatabase.getInstance().getReference().child("GroupMembers")
+                                                        .child(groupId).child(users[0].getUserId()).setValue(null);
+                                                groupMembers.remove(users[0].getUserId());
+                                                FirebaseDatabase.getInstance().getReference().child("GroupsMeta")
+                                                        .child(groupId).child("groupMembers").setValue(groupMembers);
+                                                group.setGroupMembers(groupMembers);
+                                            }
                                         }
                                     }).setNegativeButton("NO", new DialogInterface.OnClickListener() {
                                 @Override
@@ -172,12 +200,31 @@
     public boolean onOptionsItemSelected(@NonNull MenuItem item) {
         switch (item.getItemId()) {
             case R.id.addMember:
-                //Intent intent2 = new Intent(GroupProfile.this, .class);
-                //startActivity(intent2);
+                Intent intent = new Intent(GroupProfile.this, AddGroupMembersActivity.class);
+                intent.putExtra("groupId", groupId);
+                intent.putExtra("groupIcon", groupIcon);
+                intent.putExtra("groupName", groupName);
+                intent.putExtra("groupDesc", groupDesc);
+                intent.putExtra("groupAdminId", groupAdminId);
+                //intent.putExtra("groupObject", (Serializable) group[0]);
+                GroupProfile.this.startActivity(intent);
                 break;
             case R.id.leaveGroup:
-                Intent intent4 = new Intent(GroupProfile.this, MainActivity.class);
-                startActivity(intent4);
+                if(currentUserId.equals(groupAdminId)) {
+                    Toast.makeText(GroupProfile.this, "Group Admin can't leave currently", Toast.LENGTH_SHORT).show();
+                }
+                else {
+                    FirebaseDatabase.getInstance().getReference().child("UsersGroups")
+                            .child(currentUserId).child(groupId).setValue(null);
+                    FirebaseDatabase.getInstance().getReference().child("GroupMembers")
+                            .child(groupId).child(currentUserId).setValue(null);
+                    groupMembers.remove(currentUserId);
+                    FirebaseDatabase.getInstance().getReference().child("GroupsMeta")
+                            .child(groupId).child("groupMembers").setValue(groupMembers);
+                    group.setGroupMembers(groupMembers);
+                    Intent intent4 = new Intent(GroupProfile.this, MainActivity.class);
+                    startActivity(intent4);
+                }
                 break;
         }
         return true;
Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27_[Default_Changelist]/shelved.patch	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27_[Default_Changelist]/shelved.patch	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
@@ -1,1084 +0,0 @@
-Index: app/src/main/java/com/example/chatapplication/ChatDetailActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.pdf.PdfDocument;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Message;\r\nimport android.provider.MediaStore;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.chatapplication.Adapters.ChatAdapter;\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.Models.Video_Call;\r\nimport com.example.chatapplication.databinding.ActivityChatDetailBinding;\r\nimport com.google.android.gms.tasks.Continuation;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.Locale;\r\nimport java.util.UUID;\r\n\r\nimport static java.lang.String.*;\r\n\r\npublic class  ChatDetailActivity extends AppCompatActivity {\r\n\r\n    private FirebaseStorage storage;\r\n    private StorageReference storageReference;\r\n    private static final int REQUEST_IMAGE_GET = 5;\r\n    ActivityChatDetailBinding binding;\r\n    FirebaseUser user;\r\n    FirebaseDatabase database;\r\n    FirebaseAuth auth;\r\n    ImageView imgView;\r\n    private static String inputFormat = \"HH:mm\";\r\n    SimpleDateFormat inputParser = new SimpleDateFormat(inputFormat, Locale.getDefault());\r\n    Calendar calendar = Calendar.getInstance();\r\n    public Uri datafile;\r\n    private String imageUrl;\r\n    private String  receiver;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        storage = FirebaseStorage.getInstance();\r\n        storageReference = storage.getReference();\r\n        binding = ActivityChatDetailBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        getSupportActionBar().hide();\r\n        database = FirebaseDatabase.getInstance();\r\n        auth = FirebaseAuth.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        String currentUser = user.getUid();\r\n        final String[] currentUsername = new String[1];\r\n        // Get User name of currently logged in user.\r\n        database.getReference(\"Users\")\r\n                .child(currentUser)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        currentUsername[0] = snapshot.child(\"userName\").getValue().toString();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n        final  String senderId = auth.getUid();\r\n        String receivedId = getIntent().getStringExtra(\"userId\");\r\n        receiver=receivedId;\r\n        String userName = getIntent().getStringExtra(\"userName\");\r\n        String profilePic = getIntent().getStringExtra(\"profilePic\");\r\n\r\n        binding.userName.setText(userName);\r\n        Picasso.get().load(profilePic).placeholder(R.drawable.avatar).into(binding.profilePic);\r\n\r\n        binding.backArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent intent = new Intent(ChatDetailActivity.this,MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        // Video Call\r\n        final String senderRoom = senderId + receivedId;\r\n        final  String receiverRoom = receivedId + senderId;\r\n        binding.videoCallIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String call_time = valueOf(Calendar.getInstance().get(Calendar.HOUR))+\":\"+ valueOf(Calendar.getInstance().get(Calendar.MINUTE));\r\n                int year = Calendar.getInstance().get(Calendar.YEAR);\r\n                int month = Calendar.getInstance().get(Calendar.MONTH);\r\n                int day = Calendar.getInstance().get(Calendar.DATE);\r\n                final Video_Call video_call= new Video_Call(currentUsername[0],senderRoom,receiverRoom,call_time,day,month,year);\r\n                database.getReference()\r\n                        .child(\"video_call\")\r\n                        .child(senderRoom)\r\n                        .push()\r\n                        .setValue(video_call)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                database.getReference()\r\n                                        .child(\"video_call\")\r\n                                        .child(receiverRoom)\r\n                                        .push()\r\n                                        .setValue(video_call)\r\n                                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                            @Override\r\n                                            public void onSuccess(Void aVoid) {\r\n\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n\r\n                Intent calling = new Intent(ChatDetailActivity.this,VideoCallActivity.class);\r\n                calling.putExtra(\"userName\", currentUsername[0]);\r\n                calling.putExtra(\"friend\", userName);\r\n                calling.putExtra(\"sRoom\",senderRoom);\r\n                calling.putExtra(\"rRoom\",receiverRoom);\r\n                startActivity(calling);\r\n            }\r\n        });\r\n\r\n\r\n        //Incoming Video Call\r\n//        database.getReference()\r\n//                .child(\"video_call\")\r\n//                .child(senderRoom)\r\n//                .addValueEventListener(new ValueEventListener() {\r\n//                    @Override\r\n//                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n//                        // get time from database and compare with range of time\r\n//                        for(DataSnapshot snapshot1 : snapshot.getChildren()){\r\n//                            Video_Call video_call = snapshot1.getValue(Video_Call.class);\r\n//                            int year = Calendar.getInstance().get(Calendar.YEAR);\r\n//                            int month = Calendar.getInstance().get(Calendar.MONTH);\r\n//                            int day = Calendar.getInstance().get(Calendar.DATE);\r\n//                            if ( video_call.getYear() == year && video_call.getMonth() == month && video_call.getDay() == day ) {\r\n//                                // Today's Call\r\n//                                String call_time = video_call.getCall_time();\r\n//                                if ( video_call.compareDates(call_time) ){\r\n//                                    Intent incoming = new Intent(ChatDetailActivity.this,IncomingCall.class);\r\n//                                    incoming.putExtra(\"sRoom\",video_call.getsRoom());\r\n//                                    incoming.putExtra(\"rRoom\",video_call.getrRoom());\r\n//                                    incoming.putExtra(\"caller\",video_call.getUserName());\r\n//                                    startActivity(incoming);\r\n//                                }\r\n//                            } else {\r\n//                                // earlier calls\r\n//                                //Add to miss call list.\r\n//                            }\r\n//                        }\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onCancelled(@NonNull DatabaseError error) {\r\n//\r\n//                    }\r\n//                });\r\n\r\n\r\n        final ArrayList <MessagesModel> messagesModels = new ArrayList<>();\r\n\r\n        final ChatAdapter chatAdapter = new ChatAdapter(messagesModels, this , receivedId);\r\n\r\n        binding.chatRecyclerView.setAdapter(chatAdapter);\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\r\n        binding.chatRecyclerView.setLayoutManager(layoutManager);\r\n\r\n        database.getReference().child(\"chats\").child(senderRoom).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                messagesModels.clear();\r\n                for(DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                    MessagesModel model = snapshot1.getValue(MessagesModel.class);\r\n                    messagesModels.add(model);\r\n                }\r\n                chatAdapter.notifyDataSetChanged();\r\n                binding.chatRecyclerView.smoothScrollToPosition(binding.chatRecyclerView.getAdapter().getItemCount());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n     // attachments\r\n        imgView = (ImageView)findViewById(R.id.attachments4);\r\n        imgView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n                intent.setType(\"image/*\");\r\n                if (intent.resolveActivity(getPackageManager()) != null) {\r\n                    startActivityForResult(intent, REQUEST_IMAGE_GET);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n       /*\r\n        //Gallery Icon\r\n        imgView = findViewById(R.id.gallery);\r\n        imgView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(Intent.ACTION_GET_CONTENT);\r\n                intent.setType(\"image/*\");\r\n                startActivityForResult(intent,1);\r\n            }\r\n        });\r\n\r\n        //Map Icon\r\n        imgView = findViewById(R.id.location);\r\n        imgView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                if(intent.resolveActivity(getPackageManager())!=null){\r\n                    startActivityForResult(intent,2);\r\n                }\r\n            }\r\n        });\r\n\r\n        //Camera\r\n         imgView = findViewById(R.id.camera);\r\n         imgView.setOnClickListener(new View.OnClickListener() {\r\n             @Override\r\n             public void onClick(View v) {\r\n                     String targetFilename = \"/root\";\r\n                     Uri locationForPhotos = null;\r\n                     Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                     intent.putExtra(MediaStore.EXTRA_OUTPUT,\r\n                             Uri.withAppendedPath(locationForPhotos, targetFilename));\r\n                     if (intent.resolveActivity(getPackageManager()) != null) {\r\n                         startActivityForResult(intent, 3);\r\n                     }\r\n             }\r\n         });\r\n\r\n         //documents\r\n         imgView = findViewById(R.id.documents);\r\n         imgView.setOnClickListener(new View.OnClickListener() {\r\n             @Override\r\n             public void onClick(View v) {\r\n                 Intent sharingIntent = new Intent(Intent.ACTION_SEND);\r\n                 sharingIntent.setType(\"text/html\");\r\n                 sharingIntent.putExtra(android.content.Intent.EXTRA_TEXT, Html.fromHtml(\"<p>This is the text shared.</p>\"));\r\n                 startActivityForResult(sharingIntent,4);\r\n             }\r\n         });\r\n          */\r\n\r\n       binding.send.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String message =  binding.etmessage.getText().toString();\r\n                final MessagesModel model = new MessagesModel(senderId,message);\r\n                model.setTimestamp(new Date().getTime());\r\n                binding.etmessage.setText(\"\");\r\n                database.getReference().child(\"chats\").child(senderRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        database.getReference().child(\"chats\").child(receiverRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode==REQUEST_IMAGE_GET && resultCode==RESULT_OK && data!=null){\r\n            datafile = data.getData();\r\n            uploadImage();\r\n        }\r\n    }\r\n\r\n    private void uploadImage() {\r\n        final ProgressDialog pd = new ProgressDialog(this);\r\n        pd.setTitle(\"Uploading Image...\");\r\n        pd.show();\r\n        final String randomKey = UUID.randomUUID().toString();\r\n        StorageReference riversRef = storageReference.child(\"images/\" + randomKey);\r\n        UploadTask uploadTask;\r\n        uploadTask = riversRef.putFile(datafile);\r\n\r\n                uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                      pd.dismiss();\r\n                        Task<Uri> urlTask = uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n                            @Override\r\n                            public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n                                if (!task.isSuccessful()) {\r\n                                    throw task.getException();\r\n                                }\r\n\r\n                                // Continue with the task to get the download URL\r\n                                return riversRef.getDownloadUrl();\r\n                            }\r\n                        }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<Uri> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    final  String senderId = auth.getUid();\r\n                                    final String senderRoom = format(\"%s%s\", senderId, receiver);\r\n                                    final String receiverRoom = format(\"%s%s\", receiver, senderId);\r\n                                    Uri downloadUri = task.getResult();\r\n                                    imageUrl = downloadUri.toString();\r\n                                    final MessagesModel model = new MessagesModel(senderId,imageUrl);\r\n                                    model.setTimestamp(new Date().getTime());\r\n                                    model.setType(\"image\");\r\n                                    database.getReference().child(\"chats\").child(senderRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                        @Override\r\n                                        public void onSuccess(Void aVoid) {\r\n                                            database.getReference().child(\"chats\").child(receiverRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    Toast.makeText(getApplicationContext(),\"Couldn't load Image \",Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception exception) {\r\n                        pd.dismiss();\r\n                        Toast.makeText(getApplicationContext(),\"Sorry Message was not sent successfully\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }).addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n            @Override\r\n            public void onProgress(@NonNull UploadTask.TaskSnapshot snapshot) {\r\n                double progressPercentage = (100* snapshot.getBytesTransferred()/ snapshot.getTotalByteCount());\r\n                int percent = (int)progressPercentage;\r\n                pd.setMessage(\"Sending: \" + percent + \"%\");\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/ChatDetailActivity.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/ChatDetailActivity.java	(date 1619189720223)
-@@ -13,6 +13,7 @@
- import android.os.Bundle;
- import android.os.Message;
- import android.provider.MediaStore;
-+import android.text.BoringLayout;
- import android.text.Html;
- import android.util.Log;
- import android.view.View;
-@@ -22,9 +23,16 @@
- import android.widget.Toast;
- 
- import com.example.chatapplication.Adapters.ChatAdapter;
-+import com.example.chatapplication.Fragments.APIService;
- import com.example.chatapplication.Models.MessagesModel;
-+import com.example.chatapplication.Models.Users;
- import com.example.chatapplication.Models.Video_Call;
- import com.example.chatapplication.databinding.ActivityChatDetailBinding;
-+import com.example.chatapplication.notification.Client;
-+import com.example.chatapplication.notification.Data;
-+import com.example.chatapplication.notification.MyResponse;
-+import com.example.chatapplication.notification.Sender;
-+import com.example.chatapplication.notification.Token;
- import com.google.android.gms.tasks.Continuation;
- import com.google.android.gms.tasks.OnCompleteListener;
- import com.google.android.gms.tasks.OnFailureListener;
-@@ -34,7 +42,9 @@
- import com.google.firebase.auth.FirebaseUser;
- import com.google.firebase.database.DataSnapshot;
- import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
- import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.Query;
- import com.google.firebase.database.ValueEventListener;
- import com.google.firebase.storage.FirebaseStorage;
- import com.google.firebase.storage.OnProgressListener;
-@@ -51,6 +61,10 @@
- import java.util.Locale;
- import java.util.UUID;
- 
-+import retrofit2.Call;
-+import retrofit2.Callback;
-+import retrofit2.Response;
-+
- import static java.lang.String.*;
- 
- public class  ChatDetailActivity extends AppCompatActivity {
-@@ -69,6 +83,10 @@
-     public Uri datafile;
-     private String imageUrl;
-     private String  receiver;
-+    APIService apiService;
-+    private String message;
-+    private DatabaseReference reference;
-+    private Boolean notify = false;
- 
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-@@ -82,8 +100,11 @@
-         auth = FirebaseAuth.getInstance();
-         user = FirebaseAuth.getInstance().getCurrentUser();
-         String currentUser = user.getUid();
-+
-+       apiService = Client.getClient("https://fcm.googleapis.com/").create(APIService.class);
-+
-         final String[] currentUsername = new String[1];
--        // Get User name of currently logged in user.
-+        //Get User name of currently logged in user.
-         database.getReference("Users")
-                 .child(currentUser)
-                 .addListenerForSingleValueEvent(new ValueEventListener() {
-@@ -221,7 +242,9 @@
-             public void onCancelled(@NonNull DatabaseError error) {
- 
-             }
-+
-         });
-+
-      // attachments
-         imgView = (ImageView)findViewById(R.id.attachments4);
-         imgView.setOnClickListener(new View.OnClickListener() {
-@@ -292,7 +315,8 @@
-        binding.send.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
--                String message =  binding.etmessage.getText().toString();
-+                notify=true;
-+                message =  binding.etmessage.getText().toString();
-                 final MessagesModel model = new MessagesModel(senderId,message);
-                 model.setTimestamp(new Date().getTime());
-                 binding.etmessage.setText("");
-@@ -309,7 +333,66 @@
-                 });
-             }
-         });
--    }
-+
-+
-+        final String msg = message;
-+        reference = FirebaseDatabase.getInstance().getReference("Users").child(user.getUid());
-+        reference.addValueEventListener(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                Users user = snapshot.getValue(Users.class);
-+                if (notify) {
-+                    sendNotification(receiver, user.getUserName(), msg);
-+                }
-+                notify=false;
-+            }
-+
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
-+
-+            }
-+        });
-+
-+    }
-+
-+
-+    private void sendNotification(String receiver, String userName, String msg) {
-+        DatabaseReference tokens = FirebaseDatabase.getInstance().getReference("Tokens");
-+        Query query = tokens.orderByKey().equalTo(receiver);
-+        query.addValueEventListener(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                for (DataSnapshot snapshot1: snapshot.getChildren()){
-+                    Token token = snapshot1.getValue(Token.class);
-+                    Data data = new Data(user.getUid(),"new Message",userName+ ": " + message," ", R.mipmap.ic_launcher);
-+                    Sender  sender = new Sender(data,token.getToken());
-+
-+                    apiService.sendNotification(sender)
-+                            .enqueue(new Callback<MyResponse>() {
-+                                @Override
-+                                public void onResponse(Call<MyResponse> call, Response<MyResponse> response) {
-+                                    if(response.code()==200){
-+                                        if(response.body().success==1){
-+                                            Toast.makeText(ChatDetailActivity.this,"failed",Toast.LENGTH_SHORT).show();
-+                                        }
-+                                    }
-+                                }
-+
-+                                @Override
-+                                public void onFailure(Call<MyResponse> call, Throwable t) {
-+
-+                                }
-+                            });
-+                }
-+            }
-+
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
-+
-+            }
-+        });
-+    }
-+
- 
-     @Override
-     protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
-Index: app/src/main/java/com/example/chatapplication/Fragments/ChatsFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication.Fragments;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.chatapplication.Adapters.FriendAdapter;\r\nimport com.example.chatapplication.Adapters.UsersAdapter;\r\nimport com.example.chatapplication.ChatDetailActivity;\r\nimport com.example.chatapplication.Models.Friend;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.R;\r\nimport com.example.chatapplication.databinding.FragmentChatsBinding;\r\nimport com.firebase.ui.database.FirebaseRecyclerAdapter;\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ChatsFragment extends Fragment {\r\n\r\n    View FriendView;\r\n    RecyclerView friendList;\r\n\r\n    FragmentChatsBinding binding;\r\n    //ArrayList<String> list = new ArrayList<>();\r\n    ArrayList<Users> list = new ArrayList<>();\r\n    FirebaseDatabase database;\r\n    DatabaseReference frdRef, usersRef;\r\n    FirebaseAuth auth;\r\n    String currentUserId;\r\n    public ChatsFragment(){\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        FriendView = inflater.inflate(R.layout.fragment_chats, container, false);\r\n        friendList = (RecyclerView) FriendView.findViewById(R.id.chatRecyclerView);\r\n        friendList.setLayoutManager(new LinearLayoutManager(getContext()));\r\n\r\n        auth = FirebaseAuth.getInstance();\r\n        currentUserId = auth.getCurrentUser().getUid();\r\n        frdRef = FirebaseDatabase.getInstance().getReference().child(\"UsersFriend\").child(currentUserId);\r\n        usersRef = FirebaseDatabase.getInstance().getReference().child(\"Users\");\r\n        return FriendView;\r\n    }\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        FirebaseRecyclerOptions options = new FirebaseRecyclerOptions.Builder<Friend>()\r\n                .setQuery(frdRef, Friend.class).build();\r\n\r\n        FirebaseRecyclerAdapter<Friend, FriendViewHolder> adapter = new FirebaseRecyclerAdapter<Friend, FriendViewHolder>(options) {\r\n            @Override\r\n            protected void onBindViewHolder(@NonNull FriendViewHolder holder, int position, @NonNull Friend model) {\r\n                String usersIds = getRef(position).getKey();\r\n                final Users[] users = {new Users()};\r\n                usersRef.child(usersIds).addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        users[0] = snapshot.getValue(Users.class);\r\n                        /*String profilePic = snapshot.child(\"profilepic\").getValue().toString();\r\n                        String username = snapshot.child(\"userName\").getValue().toString();\r\n*/\r\n                        holder.userName.setText(users[0].getUserName());\r\n                        Picasso.get().load(users[0].getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"chats\").child(currentUserId+users[0].getUserId()).orderByChild(\"timestamp\")\r\n                                .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if(snapshot.hasChildren()){\r\n                                    for (DataSnapshot snapshot1: snapshot.getChildren()){\r\n                                        holder.lastMessage.setText(snapshot1.child(\"message\").getValue(String.class));\r\n                                    }\r\n                                }\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n                holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Intent intent = new Intent(getContext(), ChatDetailActivity.class);\r\n                        intent.putExtra(\"userId\", users[0].getUserId());\r\n                        intent.putExtra(\"profilePic\", users[0].getProfilepic());\r\n                        intent.putExtra(\"userName\", users[0].getUserName());\r\n                        getContext().startActivity(intent);\r\n                    }\r\n                });\r\n            }\r\n\r\n            @NonNull\r\n            @Override\r\n            public FriendViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.sample_show_user,parent,false);\r\n                FriendViewHolder viewHolder = new FriendViewHolder(view);\r\n                return viewHolder;\r\n            }\r\n        };\r\n        friendList.setAdapter(adapter);\r\n        adapter.startListening();\r\n    }\r\n\r\n    public static class FriendViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView image;\r\n        TextView userName, lastMessage;\r\n        public FriendViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            image = itemView.findViewById(R.id.profile_image);\r\n            userName = itemView.findViewById(R.id.userNameList);\r\n            lastMessage = itemView.findViewById(R.id.lastMessage);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Inflate the layout for this fragment\r\n        /*binding = FragmentChatsBinding.inflate(inflater,container,false);\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        UsersAdapter adapter = new UsersAdapter(list,getContext());\r\n        //FriendAdapter adapter = new FriendAdapter(list,getContext());\r\n\r\n        binding.chatRecyclerView.setAdapter(adapter);\r\n\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(getContext());\r\n        binding.chatRecyclerView.setLayoutManager(layoutManager);\r\n        final Users[] user = new Users[1];\r\n        database.getReference().child(\"UsersFriend\").child(FirebaseAuth.getInstance().getUid())\r\n                .addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.exists()){\r\n                    list.clear();\r\n                    for(DataSnapshot frddataSnapshot : snapshot.getChildren()) {\r\n                        System.out.println(frddataSnapshot.getKey());\r\n                        database.getReference().child(\"Users\").child(frddataSnapshot.getKey())\r\n                                .addValueEventListener(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot infosnapshot) {\r\n                                        Users users = infosnapshot.getValue(Users.class);\r\n                                        users.setUserId(infosnapshot.getKey());\r\n                                        list.add(users);\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                    }\r\n                                });\r\n                        //list.add(user[0]);\r\n                    }\r\n                }\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        /*database.getReference().child(\"UsersFriend\").child(FirebaseAuth.getInstance().getUid()).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                list.clear();\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                    String frdId = dataSnapshot.getKey();\r\n                    System.out.println(frdId);\r\n                    list.add(frdId);\r\n                }\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });*/\r\n/*\r\n        database.getReference().child(\"Users\").addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                list.clear();\r\n                for(DataSnapshot dataSnapshot : snapshot.getChildren()){\r\n                    Users users = dataSnapshot.getValue(Users.class);\r\n                    users.setUserId(dataSnapshot.getKey());\r\n                    if (!users.getUserId().equals(FirebaseAuth.getInstance().getUid())){\r\n                    list.add(users);}\r\n                }\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        return binding.getRoot();*/
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/Fragments/ChatsFragment.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/Fragments/ChatsFragment.java	(date 1619189761304)
-@@ -21,6 +21,7 @@
- import com.example.chatapplication.Models.Users;
- import com.example.chatapplication.R;
- import com.example.chatapplication.databinding.FragmentChatsBinding;
-+import com.example.chatapplication.notification.Token;
- import com.firebase.ui.database.FirebaseRecyclerAdapter;
- import com.firebase.ui.database.FirebaseRecyclerOptions;
- import com.google.android.gms.tasks.OnCompleteListener;
-@@ -31,6 +32,7 @@
- import com.google.firebase.database.DatabaseReference;
- import com.google.firebase.database.FirebaseDatabase;
- import com.google.firebase.database.ValueEventListener;
-+import com.google.firebase.iid.FirebaseInstanceId;
- import com.squareup.picasso.Picasso;
- 
- import java.util.ArrayList;
-@@ -47,6 +49,7 @@
-     DatabaseReference frdRef, usersRef;
-     FirebaseAuth auth;
-     String currentUserId;
-+
-     public ChatsFragment(){
- 
-     }
-@@ -62,8 +65,19 @@
-         currentUserId = auth.getCurrentUser().getUid();
-         frdRef = FirebaseDatabase.getInstance().getReference().child("UsersFriend").child(currentUserId);
-         usersRef = FirebaseDatabase.getInstance().getReference().child("Users");
-+
-+        updateToken(FirebaseInstanceId.getInstance().getToken());
-+
-         return FriendView;
-     }
-+
-+    private void updateToken(String token){
-+        DatabaseReference reference = FirebaseDatabase.getInstance().getReference("Tokens");
-+        Token token1 = new Token(token);
-+        reference.child(currentUserId).setValue(token1);
-+
-+    }
-+
-     @Override
-     public void onStart() {
-         super.onStart();
-@@ -90,7 +104,10 @@
-                             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                 if(snapshot.hasChildren()){
-                                     for (DataSnapshot snapshot1: snapshot.getChildren()){
--                                        holder.lastMessage.setText(snapshot1.child("message").getValue(String.class));
-+                                        if(snapshot1.child("type").getValue().toString()=="text")
-+                                            holder.lastMessage.setText(snapshot1.child("message").getValue(String.class));
-+                                        else
-+                                            holder.lastMessage.setText("image");
-                                     }
-                                 }
-                             }
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.chatapplication\">\r\n\r\n    <uses-feature android:name=\"android.hardware.camera2\" />\r\n    <uses-feature android:name=\"android.hardware.camera2.autofocus\" />\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" /> <!-- PubNub Dependencies -->\r\n    <!-- <uses-permission android:name=\"android.permission.INTERNET\" /> -->\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n    <uses-permission\r\n        android:name=\"com.example.chatapplication.permission.C2D_MESSAGE\"\r\n        android:protectionLevel=\"signature\" />\r\n    <uses-permission android:name=\"com.example.chatapplicationpermission.C2D_MESSAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".ForgetPasswordActivity\"></activity>\r\n        <activity android:name=\".VideoCallActivity\" />\r\n        <activity android:name=\".AddFriendActivity\" />\r\n        <activity android:name=\".CreateGroupActivity\" />\r\n        <activity android:name=\".SettingsActivity\" />\r\n        <activity android:name=\".GroupChatActivity\" />\r\n        <activity android:name=\".ChatDetailActivity\" />\r\n        <activity android:name=\".SignInActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SignUpActivity\" />\r\n        <activity android:name=\".MainActivity\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/AndroidManifest.xml	(date 1619179499130)
-@@ -11,6 +11,7 @@
-     <uses-permission android:name="android.permission.CAMERA" /> <!-- PubNub Dependencies -->
-     <!-- <uses-permission android:name="android.permission.INTERNET" /> -->
-     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
-     <uses-permission android:name="android.permission.RECORD_AUDIO" />
-     <uses-permission android:name="android.permission.INTERNET" />
-     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-@@ -45,6 +46,23 @@
-         </activity>
-         <activity android:name=".SignUpActivity" />
-         <activity android:name=".MainActivity" />
-+
-+        <service android:name=".notification.MyFirebaseServices"
-+            android:enabled="true"
-+            android:exported="true">
-+            <intent-filter>
-+                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
-+            </intent-filter>
-+        </service>
-+
-+        <service android:name=".notification.MyFirebaseMessaging"
-+            android:enabled="true"
-+            android:exported="true">
-+            <intent-filter>
-+                <action android:name="com.google.firebase.MESSAGING_EVENT" />
-+            </intent-filter>
-+        </service>
-+
-     </application>
- 
- </manifest>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44__Default_Changelist_.xml	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44__Default_Changelist_.xml	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_16-Apr-21_09_44_[Default_Changelist]" date="1618546857865" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16-Apr-21 09:44 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44_[Default_Changelist]/shelved.patch	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_16-Apr-21_09_44_[Default_Changelist]/shelved.patch	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-@@ -1,524 +0,0 @@
--Index: build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath \"com.android.tools.build:gradle:4.0.2\"\r\n        classpath 'com.google.gms:google-services:4.3.5'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- build.gradle	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ build.gradle	(date 1618488260460)
--@@ -2,6 +2,7 @@
-- buildscript {
--     repositories {
--         google()
--+        mavenCentral()
--         jcenter()
--     }
--     dependencies {
--Index: .idea/gradle.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/gradle.xml	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ .idea/gradle.xml	(date 1618137020495)
--@@ -15,6 +15,7 @@
--           </set>
--         </option>
--         <option name="resolveModulePerSourceSet" value="false" />
--+        <option name="useQualifiedModuleNames" value="true" />
--       </GradleProjectSettings>
--     </option>
--   </component>
--Index: app/src/main/java/com/example/chatapplication/MainActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.chatapplication.SignInActivity;\r\nimport com.example.chatapplication.Adapters.FragmentsAdapter;\r\nimport com.example.chatapplication.databinding.ActivityMainBinding;\r\nimport com.google.android.gms.common.internal.Objects;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    ActivityMainBinding binding;\r\n    FirebaseAuth auth;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        //setContentView(R.layout.activity_main);\r\n\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        DatabaseReference myRef = database.getReference(\"message\");\r\n        myRef.setValue(\"\");\r\n        auth = FirebaseAuth.getInstance();\r\n\r\n        binding.viewPager.setAdapter(new FragmentsAdapter(getSupportFragmentManager()));\r\n        binding.tabLayout.setupWithViewPager(binding.viewPager);\r\n\r\n        myRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String value = dataSnapshot.getValue(String.class);\r\n                Toast.makeText(MainActivity.this, \"Home Page\" + value, Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.settings:\r\n                Intent intent2 = new Intent(MainActivity.this, SettingsActivity.class);\r\n                startActivity(intent2);\r\n                break;\r\n            case R.id.logout:\r\n                SignInActivity.signOut(this);\r\n                auth.signOut();\r\n                Intent intent = new Intent(MainActivity.this, SignInActivity.class);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intent);\r\n                break;\r\n            case R.id.group:\r\n                Intent intent1 = new Intent(MainActivity.this, GroupChatActivity.class);\r\n                startActivity(intent1);\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private boolean exit = false;\r\n    @Override\r\n    public void onBackPressed() {\r\n        if(exit){\r\n            super.onBackPressed();\r\n            finish();\r\n        }else{\r\n            Toast.makeText(this,\"Press back again to exit\",Toast.LENGTH_SHORT).show();\r\n            exit = true;\r\n            new Handler().postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    exit = false;\r\n                }\r\n            },3000);\r\n        }\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/MainActivity.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/MainActivity.java	(date 1618491448695)
--@@ -13,6 +13,7 @@
-- 
-- import com.example.chatapplication.SignInActivity;
-- import com.example.chatapplication.Adapters.FragmentsAdapter;
--+import com.example.chatapplication.AddFriendActivity;
-- import com.example.chatapplication.databinding.ActivityMainBinding;
-- import com.google.android.gms.common.internal.Objects;
-- import com.google.firebase.auth.FirebaseAuth;
--@@ -69,6 +70,18 @@
--             case R.id.settings:
--                 Intent intent2 = new Intent(MainActivity.this, SettingsActivity.class);
--                 startActivity(intent2);
--+                break;
--+            case R.id.addfriend:
--+                Intent intent4 = new Intent(MainActivity.this, AddFriendActivity.class);
--+                startActivity(intent4);
--+                break;
--+            case R.id.creategroup:
--+                Intent intent3 = new Intent(MainActivity.this, CreateGroupActivity.class);
--+                startActivity(intent3);
--+                break;
--+            case R.id.group:
--+                Intent intent1 = new Intent(MainActivity.this, GroupChatActivity.class);
--+                startActivity(intent1);
--                 break;
--             case R.id.logout:
--                 SignInActivity.signOut(this);
--@@ -79,10 +92,6 @@
--                 intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
--                 startActivity(intent);
--                 break;
---            case R.id.group:
---                Intent intent1 = new Intent(MainActivity.this, GroupChatActivity.class);
---                startActivity(intent1);
---                break;
--         }
--         return true;
--     }
--Index: app/build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.chatapplication\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    implementation platform('com.google.firebase:firebase-bom:26.6.0')\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.firebase:firebase-database'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.2'\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation 'com.pubnub:pubnub-android:3.7.4'\r\n    implementation 'me.kevingleason:pnwebrtc:1.0.6@aar'\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/build.gradle	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/build.gradle	(date 1618488803161)
--@@ -44,6 +44,11 @@
--     implementation 'com.google.android.material:material:1.3.0'
--     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
-- 
--+    implementation 'com.firebaseui:firebase-ui-database:7.1.1'
--+    implementation 'com.github.bumptech.glide:glide:4.12.0'
--+    implementation 'androidx.preference:preference:1.1.1'
--+    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
--+
--     implementation 'de.hdodenhof:circleimageview:3.1.0'
-- 
--     implementation 'com.squareup.picasso:picasso:2.71828'
--Index: app/src/main/java/com/example/chatapplication/ChatDetailActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Message;\r\nimport android.view.View;\r\nimport android.widget.Adapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\n\r\nimport com.example.chatapplication.Adapters.ChatAdapter;\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.databinding.ActivityChatDetailBinding;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\npublic class ChatDetailActivity extends AppCompatActivity {\r\n\r\n    ActivityChatDetailBinding binding;\r\n    FirebaseDatabase database;\r\n    FirebaseAuth auth;\r\n    ImageView imgView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityChatDetailBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        getSupportActionBar().hide();\r\n        database = FirebaseDatabase.getInstance();\r\n        auth = FirebaseAuth.getInstance();\r\n\r\n        final  String senderId = auth.getUid();\r\n        String receivedId = getIntent().getStringExtra(\"userId\");\r\n        String userName = getIntent().getStringExtra(\"userName\");\r\n        String profilePic = getIntent().getStringExtra(\"profilePic\");\r\n\r\n        binding.userName.setText(userName);\r\n        Picasso.get().load(profilePic).placeholder(R.drawable.avatar).into(binding.profilePic);\r\n\r\n        binding.backArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent intent = new Intent(ChatDetailActivity.this,MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        // Video Call\r\n\r\n        binding.videoCallIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(ChatDetailActivity.this,VideocallActivity.class);\r\n                Bundle extras= new Bundle();\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        final ArrayList <MessagesModel> messagesModels = new ArrayList<>();\r\n\r\n        final ChatAdapter chatAdapter = new ChatAdapter(messagesModels, this , receivedId);\r\n\r\n        binding.chatRecyclerView.setAdapter(chatAdapter);\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\r\n        binding.chatRecyclerView.setLayoutManager(layoutManager);\r\n\r\n        final String senderRoom = senderId + receivedId;\r\n        final  String receiverRoom = receivedId + senderId;\r\n\r\n        database.getReference().child(\"chats\").child(senderRoom).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                messagesModels.clear();\r\n                for(DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                    MessagesModel model = snapshot1.getValue(MessagesModel.class);\r\n                    model.setMessageId(snapshot1.getKey());\r\n\r\n                    messagesModels.add(model);\r\n                }\r\n                chatAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        imgView = findViewById(R.id.attachments4);\r\n        imgView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                attachments atch = new attachments();\r\n                atch.show(getSupportFragmentManager(),atch.getTag());\r\n\r\n            }\r\n        });\r\n\r\n        binding.send.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String message =  binding.etmessage.getText().toString();\r\n                final MessagesModel model = new MessagesModel(senderId,message);\r\n                model.setTimestamp(new Date().getTime());\r\n                binding.etmessage.setText(\"\");\r\n                database.getReference().child(\"chats\").child(senderRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        database.getReference().child(\"chats\").child(receiverRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/ChatDetailActivity.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/ChatDetailActivity.java	(date 1618481971304)
--@@ -92,6 +92,7 @@
--                     messagesModels.add(model);
--                 }
--                 chatAdapter.notifyDataSetChanged();
--+                binding.chatRecyclerView.smoothScrollToPosition(binding.chatRecyclerView.getAdapter().getItemCount());
--             }
-- 
--             @Override
--@@ -117,6 +118,7 @@
--                 final MessagesModel model = new MessagesModel(senderId,message);
--                 model.setTimestamp(new Date().getTime());
--                 binding.etmessage.setText("");
--+                binding.chatRecyclerView.smoothScrollToPosition(binding.chatRecyclerView.getAdapter().getItemCount());
--                 database.getReference().child("chats").child(senderRoom).push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {
--                     @Override
--                     public void onSuccess(Void aVoid) {
--Index: app/src/main/java/com/example/chatapplication/GroupChatActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\n\r\nimport com.example.chatapplication.Adapters.ChatAdapter;\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.databinding.ActivityGroupChatBinding;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\npublic class GroupChatActivity extends AppCompatActivity {\r\n\r\n    ActivityGroupChatBinding binding;\r\n    ImageView imgView;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityGroupChatBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n         getSupportActionBar().hide();\r\n        binding.backArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(GroupChatActivity.this,MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        final FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        final ArrayList<MessagesModel> messagesModels = new ArrayList<>();\r\n\r\n        final String senderId = FirebaseAuth.getInstance().getUid();\r\n        binding.userName.setText(\"Friends Group\");\r\n\r\n        final ChatAdapter adapter = new ChatAdapter(messagesModels,this);\r\n        binding.chatRecyclerView.setAdapter(adapter);\r\n\r\n        LinearLayoutManager linearLayout = new LinearLayoutManager(this);\r\n        binding.chatRecyclerView.setLayoutManager(linearLayout);\r\n\r\n        database.getReference().child(\"GroupChats\").addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                messagesModels.clear();\r\n                for(DataSnapshot dataSnapshot: snapshot.getChildren()){\r\n                   MessagesModel model = dataSnapshot.getValue(MessagesModel.class);\r\n                   messagesModels.add(model);\r\n                }\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        imgView = findViewById(R.id.attachments);\r\n        imgView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                attachments atch = new attachments();\r\n                atch.show(getSupportFragmentManager(),atch.getTag());\r\n\r\n            }\r\n        });\r\n        binding.send.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final  String message = binding.etmessage.getText().toString();\r\n                final MessagesModel model = new MessagesModel(senderId,message);\r\n                model.setTimestamp(new Date().getTime());\r\n                binding.etmessage.setText(\"\");\r\n\r\n                database.getReference().child(\"GroupChats\").push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/GroupChatActivity.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/GroupChatActivity.java	(date 1618482191109)
--@@ -7,18 +7,24 @@
-- import android.app.Activity;
-- import android.content.Intent;
-- import android.os.Bundle;
--+import android.util.Log;
-- import android.view.View;
-- import android.widget.ImageView;
-- 
-- import com.example.chatapplication.Adapters.ChatAdapter;
--+import com.example.chatapplication.Adapters.GroupChatAdapter;
-- import com.example.chatapplication.Models.MessagesModel;
--+import com.example.chatapplication.Models.Users;
-- import com.example.chatapplication.databinding.ActivityGroupChatBinding;
--+import com.google.android.gms.tasks.OnCompleteListener;
-- import com.google.android.gms.tasks.OnSuccessListener;
--+import com.google.android.gms.tasks.Task;
-- import com.google.firebase.auth.FirebaseAuth;
-- import com.google.firebase.database.DataSnapshot;
-- import com.google.firebase.database.DatabaseError;
-- import com.google.firebase.database.FirebaseDatabase;
-- import com.google.firebase.database.ValueEventListener;
--+import com.squareup.picasso.Picasso;
-- 
-- import java.util.ArrayList;
-- import java.util.Date;
--@@ -33,7 +39,7 @@
--         super.onCreate(savedInstanceState);
--         binding = ActivityGroupChatBinding.inflate(getLayoutInflater());
--         setContentView(binding.getRoot());
---         getSupportActionBar().hide();
--+        getSupportActionBar().hide();
--         binding.backArrow.setOnClickListener(new View.OnClickListener() {
--             @Override
--             public void onClick(View v) {
--@@ -45,9 +51,23 @@
--         final ArrayList<MessagesModel> messagesModels = new ArrayList<>();
-- 
--         final String senderId = FirebaseAuth.getInstance().getUid();
--+        final String[] senderName = new String[1];
--+        final Users[] user = {null};
--+        database.getReference().child("Users").child(FirebaseAuth.getInstance().getUid())
--+                .addListenerForSingleValueEvent(new ValueEventListener() {
--+                    @Override
--+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
--+                        user[0] = snapshot.getValue(Users.class);
--+                    }
--+
--+                    @Override
--+                    public void onCancelled(@NonNull DatabaseError error) {
--+
--+                    }
--+                });
--         binding.userName.setText("Friends Group");
-- 
---        final ChatAdapter adapter = new ChatAdapter(messagesModels,this);
--+        final GroupChatAdapter adapter = new GroupChatAdapter(messagesModels,this);
--         binding.chatRecyclerView.setAdapter(adapter);
-- 
--         LinearLayoutManager linearLayout = new LinearLayoutManager(this);
--@@ -62,6 +82,7 @@
--                    messagesModels.add(model);
--                 }
--                 adapter.notifyDataSetChanged();
--+                binding.chatRecyclerView.smoothScrollToPosition(binding.chatRecyclerView.getAdapter().getItemCount());
--             }
-- 
--             @Override
--@@ -82,10 +103,10 @@
--             @Override
--             public void onClick(View v) {
--                 final  String message = binding.etmessage.getText().toString();
---                final MessagesModel model = new MessagesModel(senderId,message);
--+                final MessagesModel model = new MessagesModel(senderId, user[0].getUserName(), message);
--                 model.setTimestamp(new Date().getTime());
--                 binding.etmessage.setText("");
---
--+                binding.chatRecyclerView.smoothScrollToPosition(binding.chatRecyclerView.getAdapter().getItemCount());
--                 database.getReference().child("GroupChats").push().setValue(model).addOnSuccessListener(new OnSuccessListener<Void>() {
--                     @Override
--                     public void onSuccess(Void aVoid) {
--Index: app/src/main/res/menu/menu.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <item\r\n        android:id=\"@+id/settings\"\r\n        android:title=\"Settings\"\r\n        />\r\n    <item\r\n        android:id=\"@+id/logout\"\r\n        android:title=\"Logout\"\r\n        />\r\n    <item\r\n        android:id=\"@+id/group\"\r\n        android:title=\"Groups\"\r\n        />\r\n</menu>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/menu/menu.xml	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/res/menu/menu.xml	(date 1618485531245)
--@@ -1,5 +1,19 @@
-- <?xml version="1.0" encoding="utf-8"?>
-- <menu xmlns:android="http://schemas.android.com/apk/res/android">
--+    <item
--+        android:id="@+id/addfriend"
--+        android:title="Add Friend"
--+        />
--+
--+
--+    <item
--+        android:id="@+id/creategroup"
--+        android:title="Create Group"
--+        />
--+    <item
--+        android:id="@+id/group"
--+        android:title="Groups"
--+        />
--     <item
--         android:id="@+id/settings"
--         android:title="Settings"
--@@ -8,8 +22,4 @@
--         android:id="@+id/logout"
--         android:title="Logout"
--         />
---    <item
---        android:id="@+id/group"
---        android:title="Groups"
---        />
-- </menu>
--\ No newline at end of file
--Index: app/src/main/AndroidManifest.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.chatapplication\">\r\n    <!-- WebRTC Dependencies -->\r\n    <uses-feature android:name=\"android.hardware.camera2\" />\r\n    <uses-feature android:name=\"android.hardware.camera2.autofocus\" />\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" /> <!-- PubNub Dependencies -->\r\n    <!-- <uses-permission android:name=\"android.permission.INTERNET\" /> -->\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n    <uses-permission\r\n        android:name=\"com.example.chatapplication.permission.C2D_MESSAGE\"\r\n        android:protectionLevel=\"signature\" />\r\n    <uses-permission android:name=\"com.example.chatapplicationpermission.C2D_MESSAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".VideocallActivity\"></activity>\r\n        <activity android:name=\".SettingsActivity\" />\r\n        <activity android:name=\".GroupChatActivity\" />\r\n        <activity android:name=\".ChatDetailActivity\" />\r\n        <activity android:name=\".SignInActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SignUpActivity\" />\r\n        <activity android:name=\".MainActivity\" />\r\n    </application>\r\n\r\n</manifest>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/AndroidManifest.xml	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/AndroidManifest.xml	(date 1618546455604)
--@@ -1,25 +1,6 @@
-- <?xml version="1.0" encoding="utf-8"?>
-- <manifest xmlns:android="http://schemas.android.com/apk/res/android"
--     package="com.example.chatapplication">
---    <!-- WebRTC Dependencies -->
---    <uses-feature android:name="android.hardware.camera2" />
---    <uses-feature android:name="android.hardware.camera2.autofocus" />
---    <uses-feature
---        android:glEsVersion="0x00020000"
---        android:required="true" />
---
---    <uses-permission android:name="android.permission.CAMERA" />
---    <uses-permission android:name="android.permission.RECORD_AUDIO" />
---    <uses-permission android:name="android.permission.INTERNET" />
---    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
---    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" /> <!-- PubNub Dependencies -->
---    <!-- <uses-permission android:name="android.permission.INTERNET" /> -->
---    <uses-permission android:name="android.permission.WAKE_LOCK" />
---    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
---    <uses-permission
---        android:name="com.example.chatapplication.permission.C2D_MESSAGE"
---        android:protectionLevel="signature" />
---    <uses-permission android:name="com.example.chatapplicationpermission.C2D_MESSAGE" />
-- 
--     <application
--         android:allowBackup="true"
--@@ -28,7 +9,9 @@
--         android:roundIcon="@mipmap/ic_launcher_round"
--         android:supportsRtl="true"
--         android:theme="@style/AppTheme">
---        <activity android:name=".VideocallActivity"></activity>
--+        <activity android:name=".AddFriendActivity" />
--+        <activity android:name=".CreateGroupActivity" />
--+        <activity android:name=".VideocallActivity" />
--         <activity android:name=".SettingsActivity" />
--         <activity android:name=".GroupChatActivity" />
--         <activity android:name=".ChatDetailActivity" />
--@@ -42,5 +25,24 @@
--         <activity android:name=".SignUpActivity" />
--         <activity android:name=".MainActivity" />
--     </application>
--+    <uses-feature android:name="android.hardware.camera2" />
--+    <uses-feature android:name="android.hardware.camera2.autofocus" />
--+
--+    <uses-feature
--+        android:glEsVersion="0x00020000"
--+        android:required="true" />
--+    <uses-permission android:name="android.permission.CAMERA" /> <!-- PubNub Dependencies -->
--+    <!-- <uses-permission android:name="android.permission.INTERNET" /> -->
--+    <uses-permission android:name="android.permission.RECORD_AUDIO" />
--+    <uses-permission android:name="android.permission.INTERNET" />
--+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
--+    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
--+    <uses-permission android:name="android.permission.WAKE_LOCK" />
--+    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
--+    <uses-permission
--+        android:name="com.example.chatapplication.permission.C2D_MESSAGE"
--+        android:protectionLevel="signature" />
--+
--+    <uses-permission android:name="com.example.chatapplicationpermission.C2D_MESSAGE" />
-- 
-- </manifest>
--\ No newline at end of file
--Index: app/src/main/java/com/example/chatapplication/Models/MessagesModel.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication.Models;\r\n\r\npublic class MessagesModel {\r\n    String Id, message, messageId;\r\n    Long timestamp;\r\n\r\n    public MessagesModel(String id, String message, Long timestamp) {\r\n        Id = id;\r\n        this.message = message;\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    public MessagesModel(String id, String message) {\r\n        Id = id;\r\n        this.message = message;\r\n    }\r\n\r\n    public MessagesModel(){\r\n    }\r\n\r\n    public String getMessageId() {\r\n        return messageId;\r\n    }\r\n\r\n    public void setMessageId(String messageId) {\r\n        this.messageId = messageId;\r\n    }\r\n\r\n    public String getId() {\r\n        return Id;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        Id = id;\r\n    }\r\n\r\n    public String getMessage() {\r\n        return message;\r\n    }\r\n\r\n    public void setMessage(String message) {\r\n        this.message = message;\r\n    }\r\n\r\n    public Long getTimestamp() {\r\n        return timestamp;\r\n    }\r\n\r\n    public void setTimestamp(Long timestamp) {\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/Models/MessagesModel.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/Models/MessagesModel.java	(date 1618466766445)
--@@ -1,7 +1,7 @@
-- package com.example.chatapplication.Models;
-- 
-- public class MessagesModel {
---    String Id, message, messageId;
--+    String Id, userName, message, messageId;
--     Long timestamp;
-- 
--     public MessagesModel(String id, String message, Long timestamp) {
--@@ -10,6 +10,11 @@
--         this.timestamp = timestamp;
--     }
-- 
--+    public MessagesModel(String id, String userName, String message) {
--+        Id = id;
--+        this.userName = userName;
--+        this.message = message;
--+    }
--     public MessagesModel(String id, String message) {
--         Id = id;
--         this.message = message;
--@@ -34,6 +39,10 @@
--         Id = id;
--     }
-- 
--+    public String getUserName() { return userName; }
--+
--+    public void setUserName(String userName) { this.userName = userName; }
--+
--     public String getMessage() {
--         return message;
--     }
--Index: app/src/main/java/com/example/chatapplication/Models/Users.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication.Models;\r\n\r\npublic class Users {\r\n\r\n    String profilepic , userName , mail, password, userId, lastMessage, status;\r\n\r\n    public Users(String profilepic, String userName, String mail, String password, String userId, String lastMessage, String status) {\r\n        this.profilepic = profilepic;\r\n        this.userName = userName;\r\n        this.mail = mail;\r\n        this.password = password;\r\n        this.userId = userId;\r\n        this.lastMessage = lastMessage;\r\n        this.status = status;\r\n    }\r\n\r\n    public Users(){}\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    // SignUp Constructor\r\n    public Users(String userName, String mail, String password) {\r\n        this.userName = userName;\r\n        this.mail = mail;\r\n        this.password = password;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getProfilepic() {\r\n        return profilepic;\r\n    }\r\n\r\n    public void setProfilepic(String profilepic) {\r\n        this.profilepic = profilepic;\r\n    }\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    public void setUserName(String userName) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    public String getMail() {\r\n        return mail;\r\n    }\r\n\r\n    public void setMail(String mail) {\r\n        this.mail = mail;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n//    public String getUserId(String key) {\r\n//\r\n//        return userId;\r\n//    }\r\n//\r\n//    public void setUserId(String userId) {\r\n//\r\n//        this.userId = userId;\r\n//    }\r\n\r\n    public String getLastMessage() {\r\n        return lastMessage;\r\n    }\r\n\r\n    public void setLastMessage(String lastMessage) {\r\n        this.lastMessage = lastMessage;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/Models/Users.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/Models/Users.java	(date 1618479630970)
--@@ -1,9 +1,11 @@
-- package com.example.chatapplication.Models;
-- 
--+import java.util.ArrayList;
--+
-- public class Users {
-- 
--     String profilepic , userName , mail, password, userId, lastMessage, status;
---
--+    ArrayList<String> groupsIds;
--     public Users(String profilepic, String userName, String mail, String password, String userId, String lastMessage, String status) {
--         this.profilepic = profilepic;
--         this.userName = userName;
--@@ -31,6 +33,12 @@
--         this.password = password;
--     }
-- 
--+    public ArrayList<String> getGroups() {
--+        return groupsIds;
--+    }
--+
--+    public void setGroups(ArrayList<String> groups) { this.groupsIds = groupsIds; }
--+
--     public String getStatus() {
--         return status;
--     }
--Index: app/src/main/java/com/example/chatapplication/Adapters/UsersAdapter.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.ChatDetailActivity;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.platforminfo.UserAgentPublisher;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class UsersAdapter extends RecyclerView.Adapter<UsersAdapter.ViewHolder>{\r\n\r\n\r\n    ArrayList<Users> list;\r\n    Context context;\r\n\r\n    public UsersAdapter(ArrayList<Users> list, Context context){\r\n        this.list = list;\r\n        this.context = context;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view = LayoutInflater.from(context).inflate(R.layout.sample_show_user,parent,false);\r\n\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n\r\n        Users users = list.get(position);\r\n\r\n        Picasso.get().load(users.getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n        holder.userName.setText(users.getUserName());\r\n\r\n        FirebaseDatabase.getInstance().getReference().child(\"chats\").child(FirebaseAuth.getInstance().getUid()+users.getUserId()).orderByChild(\"timestamp\")\r\n                .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.hasChildren()){\r\n                    for (DataSnapshot snapshot1: snapshot.getChildren()){\r\n                        holder.lastMessage.setText(snapshot1.child(\"message\").getValue(String.class));\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(context, ChatDetailActivity.class);\r\n                intent.putExtra(\"userId\",users.getUserId());\r\n                intent.putExtra(\"profilePic\",users.getProfilepic());\r\n                intent.putExtra(\"userName\",users.getUserName());\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return list.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        ImageView image;\r\n        TextView userName, lastMessage;\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            image = itemView.findViewById(R.id.profile_image);\r\n            userName = itemView.findViewById(R.id.userNameList);\r\n            lastMessage = itemView.findViewById(R.id.lastMessage);\r\n\r\n        }\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/Adapters/UsersAdapter.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/Adapters/UsersAdapter.java	(date 1618496259881)
--@@ -62,10 +62,8 @@
--                     }
--                 }
--             }
---
--             @Override
--             public void onCancelled(@NonNull DatabaseError error) {
---
--             }
--         });
-- 
--Index: app/src/main/java/com/example/chatapplication/Adapters/FragmentsAdapter.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication.Adapters;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\n\r\nimport com.example.chatapplication.Fragments.CallsFragment;\r\nimport com.example.chatapplication.Fragments.ChatsFragment;\r\nimport com.example.chatapplication.Fragments.StatusFragment;\r\n\r\npublic class FragmentsAdapter extends FragmentPagerAdapter {\r\n    public FragmentsAdapter(@NonNull FragmentManager fm) {\r\n        super(fm);\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public Fragment getItem(int position) {\r\n        switch(position) {\r\n            case 0: return new ChatsFragment();\r\n            case 1: return new StatusFragment();\r\n            case 2: return new CallsFragment();\r\n            default: return new ChatsFragment();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return 3;\r\n    }\r\n    @Nullable\r\n    @Override\r\n    public CharSequence getPageTitle(int position) {\r\n        String title = null;\r\n        if (position == 0) {\r\n            title =\"CHATS\";\r\n        }\r\n        if (position == 1) {\r\n            title =\"STATUS\";\r\n        }\r\n        if (position == 2) {\r\n            title =\"CALLS\";\r\n        }\r\n        return title;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/Adapters/FragmentsAdapter.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/Adapters/FragmentsAdapter.java	(date 1618145541299)
--@@ -8,6 +8,7 @@
-- 
-- import com.example.chatapplication.Fragments.CallsFragment;
-- import com.example.chatapplication.Fragments.ChatsFragment;
--+import com.example.chatapplication.Fragments.GroupFragment;
-- import com.example.chatapplication.Fragments.StatusFragment;
-- 
-- public class FragmentsAdapter extends FragmentPagerAdapter {
--@@ -20,7 +21,7 @@
--     public Fragment getItem(int position) {
--         switch(position) {
--             case 0: return new ChatsFragment();
---            case 1: return new StatusFragment();
--+            case 1: return new GroupFragment();
--             case 2: return new CallsFragment();
--             default: return new ChatsFragment();
--         }
--@@ -38,7 +39,7 @@
--             title ="CHATS";
--         }
--         if (position == 1) {
---            title ="STATUS";
--+            title ="GROUPS";
--         }
--         if (position == 2) {
--             title ="CALLS";
--Index: app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.chatapplication.Adapters;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\npublic class ChatAdapter extends  RecyclerView.Adapter {\r\n\r\n    ArrayList <MessagesModel> messagesModels;\r\n    Context context;\r\n    String recId;\r\n\r\n    int SENDER_VIEW_TYPE = 1;\r\n    int RECEIVER_VIEW_TYPE = 2;\r\n\r\n    public ChatAdapter(ArrayList<MessagesModel> messagesModels, Context context) {\r\n        this.messagesModels = messagesModels;\r\n        this.context = context;\r\n    }\r\n\r\n    public ChatAdapter(ArrayList<MessagesModel> messagesModels, Context context, String recId) {\r\n        this.messagesModels = messagesModels;\r\n        this.context = context;\r\n        this.recId = recId;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        if (viewType==SENDER_VIEW_TYPE ){\r\n           View  view = LayoutInflater.from( context ).inflate(R.layout.sample_sender ,parent ,false);\r\n           return new SenderViewHolder(view);\r\n        }\r\n        else {\r\n            View  view;\r\n            view = LayoutInflater.from( context ).inflate(R.layout.sample_receiver ,parent ,false);\r\n            return new ReceiverViewHolder(view);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\r\n     MessagesModel messagesModel = messagesModels.get(position);\r\n\r\n     holder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n         @Override\r\n         public boolean onLongClick(View v) {\r\n             new AlertDialog.Builder(context).setTitle(\"Delete\").setMessage(\"Are you sure you want to delete this message\")\r\n                     .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                         @Override\r\n                         public void onClick(DialogInterface dialog, int which) {\r\n                             FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n                             String senderRoom = FirebaseAuth.getInstance().getUid() + recId;\r\n                             database.getReference().child(\"chats\").child(senderRoom)\r\n                                     .child(messagesModel.getMessageId()).setValue(null);\r\n                         }\r\n                     }).setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\r\n                 @Override\r\n                 public void onClick(DialogInterface dialog, int which) {\r\n                     dialog.dismiss();;\r\n                 }\r\n             }).show();\r\n\r\n             return false;\r\n         }\r\n     });\r\n\r\n       if(holder.getClass() == SenderViewHolder.class){\r\n           ((SenderViewHolder) holder).senderMsg.setText(messagesModel.getMessage());\r\n       }\r\n       else {\r\n           ((ReceiverViewHolder)holder).receiverMsg.setText(messagesModel.getMessage());\r\n       }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        if(messagesModels.get(position).getId().equals(FirebaseAuth.getInstance().getUid()))\r\n            return   SENDER_VIEW_TYPE;\r\n        else\r\n            return RECEIVER_VIEW_TYPE;\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return messagesModels.size();\r\n    }\r\n\r\n    public class ReceiverViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView receiverMsg,receiverTime;\r\n\r\n        public ReceiverViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            receiverMsg = itemView.findViewById(R.id.receiverText);\r\n            receiverTime = itemView.findViewById(R.id.receiverTime);\r\n        }\r\n    }\r\n\r\n    public  class  SenderViewHolder extends  RecyclerView.ViewHolder{\r\n        TextView senderMsg,senderTime;\r\n\r\n        public SenderViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            senderMsg = itemView.findViewById(R.id.senderText);\r\n            senderTime = itemView.findViewById(R.id.sendetTime);\r\n        }\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java	(date 1618465291430)
--@@ -16,7 +16,9 @@
-- import com.google.firebase.auth.FirebaseAuth;
-- import com.google.firebase.database.FirebaseDatabase;
-- 
--+import java.text.SimpleDateFormat;
-- import java.util.ArrayList;
--+import java.util.Date;
-- import java.util.Objects;
-- 
-- public class ChatAdapter extends  RecyclerView.Adapter {
--@@ -82,9 +84,15 @@
-- 
--        if(holder.getClass() == SenderViewHolder.class){
--            ((SenderViewHolder) holder).senderMsg.setText(messagesModel.getMessage());
--+           SimpleDateFormat formatter = new SimpleDateFormat("h:mm a");
--+           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));
--+           ((SenderViewHolder) holder).senderTime.setText(timeString);
--        }
--        else {
--            ((ReceiverViewHolder)holder).receiverMsg.setText(messagesModel.getMessage());
--+           SimpleDateFormat formatter = new SimpleDateFormat("h:mm a");
--+           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));
--+           ((ReceiverViewHolder) holder).receiverTime.setText(timeString);
--        }
--     }
-- 
--Index: app/src/main/res/values/strings.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><resources>\r\n    <string name=\"app_name\">ChatApplication</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"STDBY_SUFFIX\">-stdby</string>\r\n    <string name=\"USER_NAME\">user_name</string>\r\n    <string name=\"JSON_CALL_USER\">call_user</string>\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/strings.xml	(revision 107abb3f645b98124261ce8d4bbb44336c3f56dd)
--+++ app/src/main/res/values/strings.xml	(date 1618488802459)
--@@ -5,4 +5,20 @@
--     <string name="STDBY_SUFFIX">-stdby</string>
--     <string name="USER_NAME">user_name</string>
--     <string name="JSON_CALL_USER">call_user</string>
--+    <string name="title_activity_settings2">SettingsActivity2</string>
--+
--+    <!-- Preference Titles -->
--+    <string name="messages_header">Messages</string>
--+    <string name="sync_header">Sync</string>
--+
--+    <!-- Messages Preferences -->
--+    <string name="signature_title">Your signature</string>
--+    <string name="reply_title">Default reply action</string>
--+
--+    <!-- Sync Preferences -->
--+    <string name="sync_title">Sync email periodically</string>
--+    <string name="attachment_title">Download incoming attachments</string>
--+    <string name="attachment_summary_on">Automatically download attachments for incoming emails
--+    </string>
--+    <string name="attachment_summary_off">Only download attachments when manually requested</string>
-- </resources>
--\ No newline at end of file
-Index: app/src/main/java/com/example/chatapplication/Adapters/UsersAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.ChatDetailActivity;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.platforminfo.UserAgentPublisher;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class UsersAdapter extends RecyclerView.Adapter<UsersAdapter.ViewHolder>{\r\n\r\n\r\n    ArrayList<Users> list;\r\n    Context context;\r\n\r\n    public UsersAdapter(ArrayList<Users> list, Context context){\r\n        this.list = list;\r\n        this.context = context;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view = LayoutInflater.from(context).inflate(R.layout.sample_show_user,parent,false);\r\n\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n\r\n        Users users = list.get(position);\r\n\r\n        Picasso.get().load(users.getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n        holder.userName.setText(users.getUserName());\r\n\r\n\r\n        /*\r\n        FirebaseDatabase.getInstance().getReference().child(\"chats\").child(FirebaseAuth.getInstance().getUid()+users.getUserId()).orderByChild(\"timestamp\")\r\n                .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.hasChildren()){\r\n                    for (DataSnapshot snapshot1: snapshot.getChildren()){\r\n                        holder.lastMessage.setText(snapshot1.child(\"message\").getValue().toString());\r\n                    }\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n        });\r\n         */\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(context, ChatDetailActivity.class);\r\n                intent.putExtra(\"userId\",users.getUserId());\r\n                intent.putExtra(\"profilePic\",users.getProfilepic());\r\n                intent.putExtra(\"userName\",users.getUserName());\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return list.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        ImageView image;\r\n        TextView userName, lastMessage;\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            image = itemView.findViewById(R.id.profile_image);\r\n            userName = itemView.findViewById(R.id.userNameList);\r\n            lastMessage = itemView.findViewById(R.id.lastMessage);\r\n\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/Adapters/UsersAdapter.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/Adapters/UsersAdapter.java	(date 1619024863016)
-@@ -53,8 +53,8 @@
-         holder.userName.setText(users.getUserName());
- 
- 
--        /*
--        FirebaseDatabase.getInstance().getReference().child("chats").child(FirebaseAuth.getInstance().getUid()+users.getUserId()).orderByChild("timestamp")
-+
-+        /*  FirebaseDatabase.getInstance().getReference().child("chats").child(FirebaseAuth.getInstance().getUid()+users.getUserId()).orderByChild("timestamp")
-                 .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {
-             @Override
-             public void onDataChange(@NonNull DataSnapshot snapshot) {
-@@ -67,8 +67,8 @@
-             @Override
-             public void onCancelled(@NonNull DatabaseError error) {
-             }
--        });
--         */
-+        }); */
-+
- 
-         holder.itemView.setOnClickListener(new View.OnClickListener() {
-             @Override
-Index: app/src/main/java/com/example/chatapplication/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.chatapplication.SignInActivity;\r\nimport com.example.chatapplication.Adapters.FragmentsAdapter;\r\nimport com.example.chatapplication.AddFriendActivity;\r\nimport com.example.chatapplication.databinding.ActivityMainBinding;\r\nimport com.google.android.gms.common.internal.Objects;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    ActivityMainBinding binding;\r\n    FirebaseAuth auth;\r\n\r\n    String []PERMISSIONS = {Manifest.permission.CAMERA,Manifest.permission.RECORD_AUDIO,Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n    int PERMISSION_ALL = 1;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n        //setContentView(R.layout.activity_main);\r\n\r\n        if (!hasPermissions(this, PERMISSIONS)) {\r\n            ActivityCompat.requestPermissions(this, PERMISSIONS, PERMISSION_ALL);\r\n        }\r\n\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        DatabaseReference myRef = database.getReference(\"message\");\r\n        myRef.setValue(\"\");\r\n        auth = FirebaseAuth.getInstance();\r\n\r\n        binding.viewPager.setAdapter(new FragmentsAdapter(getSupportFragmentManager()));\r\n        binding.tabLayout.setupWithViewPager(binding.viewPager);\r\n\r\n        myRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String value = dataSnapshot.getValue(String.class);\r\n                Toast.makeText(MainActivity.this, \"Home Page\" + value, Toast.LENGTH_SHORT).show();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.settings:\r\n                Intent intent2 = new Intent(MainActivity.this, SettingsActivity.class);\r\n                startActivity(intent2);\r\n                break;\r\n            case R.id.addfriend:\r\n                Intent intent4 = new Intent(MainActivity.this, AddFriendActivity.class);\r\n                startActivity(intent4);\r\n                break;\r\n            case R.id.creategroup:\r\n                Intent intent3 = new Intent(MainActivity.this, CreateGroupActivity.class);\r\n                startActivity(intent3);\r\n                break;\r\n            case R.id.group:\r\n                Intent intent1 = new Intent(MainActivity.this, GroupChatActivity.class);\r\n                startActivity(intent1);\r\n                break;\r\n            case R.id.logout:\r\n                SignInActivity.signOut(this);\r\n                auth.signOut();\r\n                Intent intent = new Intent(MainActivity.this, SignInActivity.class);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intent);\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private boolean exit = false;\r\n    @Override\r\n    public void onBackPressed() {\r\n        if(exit){\r\n            super.onBackPressed();\r\n            finish();\r\n        }else{\r\n            Toast.makeText(this,\"Press back again to exit\",Toast.LENGTH_SHORT).show();\r\n            exit = true;\r\n            new Handler().postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    exit = false;\r\n                }\r\n            },3000);\r\n        }\r\n    }\r\n\r\n    public static boolean hasPermissions(Context context, String... permissions) {\r\n        if (context != null && permissions != null) {\r\n            for (String permission : permissions) {\r\n                if (ActivityCompat.checkSelfPermission(context, permission) != PackageManager.PERMISSION_GRANTED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/MainActivity.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/MainActivity.java	(date 1619030363883)
-@@ -32,7 +32,7 @@
-     ActivityMainBinding binding;
-     FirebaseAuth auth;
- 
--    String []PERMISSIONS = {Manifest.permission.CAMERA,Manifest.permission.RECORD_AUDIO,Manifest.permission.WRITE_EXTERNAL_STORAGE};
-+    String []PERMISSIONS = {Manifest.permission.CAMERA,Manifest.permission.RECORD_AUDIO,Manifest.permission.WRITE_EXTERNAL_STORAGE,Manifest.permission.READ_EXTERNAL_STORAGE};
-     int PERMISSION_ALL = 1;
- 
-     @Override
-Index: app/src/main/java/com/example/chatapplication/Adapters/FriendAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.ChatDetailActivity;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.platforminfo.UserAgentPublisher;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class FriendAdapter extends RecyclerView.Adapter<FriendAdapter.ViewHolder>{\r\n\r\n\r\n    ArrayList<String> list;\r\n    Context context;\r\n\r\n    public FriendAdapter(ArrayList<String> list, Context context){\r\n        this.list = list;\r\n        this.context = context;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view = LayoutInflater.from(context).inflate(R.layout.sample_show_user,parent,false);\r\n\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n\r\n        String frdId = list.get(position);\r\n        final Users[] users = {null};\r\n        FirebaseDatabase.getInstance().getReference().child(\"Users\").child(FirebaseAuth.getInstance().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        users[0] = snapshot.getValue(Users.class);\r\n                        users[0].setUserId(snapshot.getKey());\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        System.out.println(\" this is test\" + error);\r\n                    }\r\n                });\r\n        Picasso.get().load(users[0].getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n        holder.userName.setText(users[0].getUserName());\r\n\r\n        FirebaseDatabase.getInstance().getReference().child(\"chats\").child(FirebaseAuth.getInstance().getUid()+ users[0].getUserId()).orderByChild(\"timestamp\")\r\n                .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot.hasChildren()){\r\n                    for (DataSnapshot snapshot1: snapshot.getChildren()){\r\n                        holder.lastMessage.setText(snapshot1.child(\"message\").getValue(String.class));\r\n                    }\r\n                }\r\n            }\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n        });\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent intent = new Intent(context, ChatDetailActivity.class);\r\n                intent.putExtra(\"userId\", users[0].getUserId());\r\n                intent.putExtra(\"profilePic\", users[0].getProfilepic());\r\n                intent.putExtra(\"userName\", users[0].getUserName());\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return list.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        ImageView image;\r\n        TextView userName, lastMessage;\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            image = itemView.findViewById(R.id.profile_image);\r\n            userName = itemView.findViewById(R.id.userNameList);\r\n            lastMessage = itemView.findViewById(R.id.lastMessage);\r\n\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/Adapters/FriendAdapter.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/Adapters/FriendAdapter.java	(date 1619025534797)
-@@ -72,6 +72,7 @@
-             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                 if(snapshot.hasChildren()){
-                     for (DataSnapshot snapshot1: snapshot.getChildren()){
-+                        if(snapshot1.child("type").getValue().toString()=="text")
-                         holder.lastMessage.setText(snapshot1.child("message").getValue(String.class));
-                     }
-                 }
-Index: app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication.Adapters;\r\n\r\nimport android.Manifest;\r\nimport android.app.AlertDialog;\r\nimport android.app.DownloadManager;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.loader.content.AsyncTaskLoader;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.ChatDetailActivity;\r\nimport com.example.chatapplication.DownloadImage;\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.squareup.picasso.Picasso;\r\nimport com.squareup.picasso.Target;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.UUID;\r\n\r\nimport static androidx.core.app.ActivityCompat.requestPermissions;\r\nimport static androidx.core.content.ContextCompat.checkSelfPermission;\r\nimport static org.webrtc.ContextUtils.getApplicationContext;\r\n\r\npublic class ChatAdapter extends  RecyclerView.Adapter {\r\n\r\n    private static final int PERMISSION_STORAGE_CODE = 1000;\r\n    ArrayList <MessagesModel> messagesModels;\r\n    Context context;\r\n    String recId;\r\n\r\n    int SENDER_VIEW_TYPE = 1;\r\n    int RECEIVER_VIEW_TYPE = 2;\r\n    int SENDER_VIEW_TYPE_IMAGE=3;\r\n    int RECEIVER_VIEW_TYPE_IMAGE=4;\r\n\r\n    public ChatAdapter(ArrayList<MessagesModel> messagesModels, Context context) {\r\n        this.messagesModels = messagesModels;\r\n        this.context = context;\r\n    }\r\n\r\n    public ChatAdapter(ArrayList<MessagesModel> messagesModels, Context context, String recId) {\r\n        this.messagesModels = messagesModels;\r\n        this.context = context;\r\n        this.recId = recId;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        if (viewType==SENDER_VIEW_TYPE) {\r\n           View  view = LayoutInflater.from( context ).inflate(R.layout.sample_sender ,parent ,false);\r\n           return new SenderViewHolder(view);\r\n        }\r\n        else if(viewType==SENDER_VIEW_TYPE_IMAGE)\r\n        {\r\n            View  view = LayoutInflater.from( context ).inflate(R.layout.sample_sender_image ,parent ,false);\r\n            return new SenderViewHolderImage(view);\r\n        }\r\n        else if(viewType==RECEIVER_VIEW_TYPE_IMAGE){\r\n            View  view = LayoutInflater.from( context ).inflate(R.layout.sample_receiver_image ,parent ,false);\r\n            return new ReceiverViewHolderImage(view);\r\n        }\r\n        else {\r\n            View  view;\r\n            view = LayoutInflater.from( context ).inflate(R.layout.sample_receiver ,parent ,false);\r\n            return new ReceiverViewHolder(view);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\r\n     MessagesModel messagesModel = messagesModels.get(position);\r\n\r\n     holder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n         @Override\r\n         public boolean onLongClick(View v) {\r\n             new AlertDialog.Builder(context).setTitle(\"Delete\").setMessage(\"Are you sure you want to delete this message\")\r\n                     .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                         @Override\r\n                         public void onClick(DialogInterface dialog, int which) {\r\n                             FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n                             String senderRoom = FirebaseAuth.getInstance().getUid() + recId;\r\n                             database.getReference().child(\"chats\").child(senderRoom)\r\n                                     .child(messagesModel.getMessageId()).setValue(null);\r\n                         }\r\n                     }).setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\r\n                 @Override\r\n                 public void onClick(DialogInterface dialog, int which) {\r\n                     dialog.dismiss();;\r\n                 }\r\n             }).show();\r\n\r\n             return false;\r\n         }\r\n     });\r\n\r\n       if (holder.getClass() == SenderViewHolder.class){\r\n           ((SenderViewHolder) holder).senderMsg.setText(messagesModel.getMessage());\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((SenderViewHolder) holder).senderTime.setText(timeString);\r\n       }\r\n\r\n       else if(holder.getClass()==SenderViewHolderImage.class){\r\n           String url = messagesModel.getMessage().toString();\r\n           Picasso.get().load(url).into(((SenderViewHolderImage)holder).senderImg);\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((SenderViewHolderImage) holder).senderTime.setText(timeString);\r\n       }\r\n\r\n       else if(holder.getClass()==ReceiverViewHolderImage.class){\r\n           //Retrieving Url\r\n           String url = messagesModel.getMessage().toString();\r\n           /* if(Build.VERSION.SDK_INT>Build.VERSION_CODES.M) {\r\n               if(checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE== PackageManager.PERMISSION_DENIED)){\r\n                   String []permissions = {Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                   requestPermissions(permissions,PERMISSION_STORAGE_CODE);\r\n               }\r\n               else {\r\n                   downloadFile(url);\r\n               }\r\n           }\r\n           else{\r\n               downloadFile(url);\r\n           }*/\r\n           downloadFile(url);\r\n           Picasso.get().load(url).into(((ReceiverViewHolderImage)holder).receiverImg);\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((ReceiverViewHolderImage) holder).receiverTime.setText(timeString);\r\n       }\r\n\r\n       else {\r\n           ((ReceiverViewHolder)holder).receiverMsg.setText(messagesModel.getMessage());\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((ReceiverViewHolder) holder).receiverTime.setText(timeString);\r\n       }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        if(messagesModels.get(position).getId().equals(FirebaseAuth.getInstance().getUid())){\r\n\r\n            if(messagesModels.get(position).getType().equals(\"image\"))\r\n                  return SENDER_VIEW_TYPE_IMAGE;\r\n            else\r\n                  return   SENDER_VIEW_TYPE;\r\n        }\r\n        else{\r\n\r\n            if (messagesModels.get(position).getType().equals(\"image\"))\r\n                return RECEIVER_VIEW_TYPE_IMAGE;\r\n            else\r\n                return RECEIVER_VIEW_TYPE;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return messagesModels.size();\r\n    }\r\n\r\n    public class ReceiverViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView receiverMsg,receiverTime;\r\n\r\n        public ReceiverViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            receiverMsg = itemView.findViewById(R.id.receiverText);\r\n            receiverTime = itemView.findViewById(R.id.receiverTime);\r\n        }\r\n    }\r\n\r\n\r\n    public class ReceiverViewHolderImage extends RecyclerView.ViewHolder {\r\n\r\n        ImageView receiverImg;\r\n        TextView receiverTime;\r\n\r\n        public ReceiverViewHolderImage(@NonNull View itemView) {\r\n            super(itemView);\r\n            receiverImg = itemView.findViewById(R.id.receiverImageView);\r\n            receiverTime = itemView.findViewById(R.id.receiverImageTime);\r\n        }\r\n    }\r\n\r\n    public  class  SenderViewHolder extends  RecyclerView.ViewHolder{\r\n        TextView senderMsg,senderTime;\r\n\r\n        public SenderViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            senderMsg = itemView.findViewById(R.id.senderText);\r\n            senderTime = itemView.findViewById(R.id.sendetTime);\r\n        }\r\n    }\r\n\r\n\r\n    public class SenderViewHolderImage extends RecyclerView.ViewHolder {\r\n\r\n        ImageView senderImg;\r\n        TextView senderTime;\r\n\r\n        public SenderViewHolderImage(@NonNull View itemView) {\r\n            super(itemView);\r\n            senderImg = itemView.findViewById(R.id.senderImageView);\r\n            senderTime = itemView.findViewById(R.id.senderImageTime);\r\n        }\r\n    }\r\n\r\n    public void downloadFile(String url){\r\n         String []Url = new String[]{url};\r\n         DownloadImage newDownload = new DownloadImage();\r\n         newDownload.execute(Url);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java	(date 1619150278917)
-@@ -1,17 +1,23 @@
- package com.example.chatapplication.Adapters;
- 
- import android.Manifest;
-+import android.app.Activity;
- import android.app.AlertDialog;
- import android.app.DownloadManager;
-+import android.content.ContentResolver;
- import android.content.Context;
- import android.content.DialogInterface;
-+import android.content.Intent;
- import android.content.pm.PackageManager;
- import android.graphics.Bitmap;
- import android.graphics.BitmapFactory;
-+import android.graphics.drawable.BitmapDrawable;
-+import android.graphics.drawable.Drawable;
- import android.net.Uri;
- import android.os.AsyncTask;
- import android.os.Build;
- import android.os.Environment;
-+import android.provider.MediaStore;
- import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
-@@ -38,6 +44,7 @@
- import java.io.FileNotFoundException;
- import java.io.FileOutputStream;
- import java.io.IOException;
-+import java.lang.ref.WeakReference;
- import java.text.SimpleDateFormat;
- import java.util.ArrayList;
- import java.util.Date;
-@@ -46,10 +53,52 @@
- import static androidx.core.app.ActivityCompat.requestPermissions;
- import static androidx.core.content.ContextCompat.checkSelfPermission;
- import static org.webrtc.ContextUtils.getApplicationContext;
-+/*
-+ class SaveImageHelper implements Target{
-+
-+     private WeakReference<ContentResolver> contentResolverWeakReference;
-+     private String name;
-+     private String desc;
-+
-+     public SaveImageHelper( ContentResolver contentResolverWeakReference,String name,String desc) {
-+         this.contentResolverWeakReference = new WeakReference<ContentResolver>(contentResolverWeakReference);
-+         this.name = name;
-+         this.desc = desc;
-+     }
-+
-+     @Override
-+     public void onBitmapLoaded(Bitmap bitmap, Picasso.LoadedFrom from) {
-+         ContentResolver r = contentResolverWeakReference.get();
-+         //if(r!=null)
-+         String bit = "nullBitmap";
-+         if(bitmap==null)
-+             System.out.println(bit);
-+
-+         MediaStore.Images.Media.insertImage(r,bitmap,name,desc);
-+
-+         //Open gallery after download
-+        /* Intent i = new Intent();
-+         i.setAction(Intent.ACTION_GET_CONTENT);
-+         i.setType("image/*");
-+         context.startActivities(Intent.createChooser(i,"select picture"));
-+         }*/
-+
-+     /*
-+     @Override
-+     public void onBitmapFailed(Exception e, Drawable errorDrawable) {
-+
-+     }
-+
-+     @Override
-+     public void onPrepareLoad(Drawable placeHolderDrawable) {
-+
-+     }
-+ }
-+ */
- 
- public class ChatAdapter extends  RecyclerView.Adapter {
- 
--    private static final int PERMISSION_STORAGE_CODE = 1000;
-+    //private static final int PERMISSION_STORAGE_CODE = 1000;
-     ArrayList <MessagesModel> messagesModels;
-     Context context;
-     String recId;
-@@ -138,19 +187,7 @@
-        else if(holder.getClass()==ReceiverViewHolderImage.class){
-            //Retrieving Url
-            String url = messagesModel.getMessage().toString();
--           /* if(Build.VERSION.SDK_INT>Build.VERSION_CODES.M) {
--               if(checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE== PackageManager.PERMISSION_DENIED)){
--                   String []permissions = {Manifest.permission.WRITE_EXTERNAL_STORAGE};
--                   requestPermissions(permissions,PERMISSION_STORAGE_CODE);
--               }
--               else {
--                   downloadFile(url);
--               }
--           }
--           else{
--               downloadFile(url);
--           }*/
--           downloadFile(url);
-+          // downloadFile(url,context);
-            Picasso.get().load(url).into(((ReceiverViewHolderImage)holder).receiverImg);
-            SimpleDateFormat formatter = new SimpleDateFormat("h:mm a");
-            String timeString = formatter.format(new Date(messagesModel.getTimestamp()));
-@@ -235,10 +272,15 @@
-         }
-     }
- 
--    public void downloadFile(String url){
--         String []Url = new String[]{url};
--         DownloadImage newDownload = new DownloadImage();
--         newDownload.execute(Url);
--    }
-+
-+    /*
-+    public void downloadFile(String url,Context ctx){
-+           String filename = UUID.randomUUID().toString() + "jpg";
-+           Picasso.get()
-+                   .load(url)
-+                   .into(new SaveImageHelper(ctx.getApplicationContext().getContentResolver(),filename,"image downloaded"));
-+
-+         }
-+         */
- 
- }
-Index: app/src/main/java/com/example/chatapplication/DownloadImage.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.os.AsyncTask;\r\n\r\nimport org.webrtc.EglBase;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\n\r\nimport static org.webrtc.ContextUtils.getApplicationContext;\r\n\r\npublic class DownloadImage extends AsyncTask<String, Void, Bitmap> {\r\n\r\n    @Override\r\n    protected void onPreExecute() {\r\n        super.onPreExecute();\r\n    }\r\n\r\n    @Override\r\n    protected Bitmap doInBackground(String[] URL) {\r\n\r\n        String imageURL = URL[0];\r\n\r\n        Bitmap bitmap = null;\r\n        try {\r\n            // Download Image from URL\r\n            InputStream input = new java.net.URL(imageURL).openStream();\r\n            // Decode Bitmap\r\n            bitmap = BitmapFactory.decodeStream(input);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return bitmap;\r\n    }\r\n\r\n    @Override\r\n    protected void onPostExecute(Bitmap result) {\r\n\r\n        if (result != null) {\r\n            Context mContext = getApplicationContext();\r\n            File dir = new File(mContext.getFilesDir(), \"MyImages\");\r\n            if(!dir.exists()){\r\n                dir.mkdir();\r\n            }\r\n            File destination = new File(dir, \"image.jpg\");\r\n\r\n            try {\r\n                destination.createNewFile();\r\n                ByteArrayOutputStream bos = new ByteArrayOutputStream();\r\n                result.compress(Bitmap.CompressFormat.PNG, 0 /*ignored for PNG*/, bos);\r\n                byte[] bitmapdata = bos.toByteArray();\r\n\r\n                FileOutputStream fos = new FileOutputStream(destination);\r\n                fos.write(bitmapdata);\r\n                fos.flush();\r\n                fos.close();\r\n                File selectedFile = destination;\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/DownloadImage.java	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/src/main/java/com/example/chatapplication/DownloadImage.java	(date 1619037261352)
-@@ -17,6 +17,11 @@
- 
- public class DownloadImage extends AsyncTask<String, Void, Bitmap> {
- 
-+    private Context mContext;
-+
-+    public  DownloadImage(Context context){
-+        mContext=context;
-+    }
-     @Override
-     protected void onPreExecute() {
-         super.onPreExecute();
-@@ -43,7 +48,6 @@
-     protected void onPostExecute(Bitmap result) {
- 
-         if (result != null) {
--            Context mContext = getApplicationContext();
-             File dir = new File(mContext.getFilesDir(), "MyImages");
-             if(!dir.exists()){
-                 dir.mkdir();
-@@ -53,7 +57,7 @@
-             try {
-                 destination.createNewFile();
-                 ByteArrayOutputStream bos = new ByteArrayOutputStream();
--                result.compress(Bitmap.CompressFormat.PNG, 0 /*ignored for PNG*/, bos);
-+                result.compress(Bitmap.CompressFormat.JPEG, 100, bos);
-                 byte[] bitmapdata = bos.toByteArray();
- 
-                 FileOutputStream fos = new FileOutputStream(destination);
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.chatapplication\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    implementation platform('com.google.firebase:firebase-bom:26.6.0')\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.firebase:firebase-database'\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n\r\n    implementation 'com.firebaseui:firebase-ui-database:7.1.1'\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'\r\n\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.2'\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation ('org.jitsi.react:jitsi-meet-sdk:2.+') { transitive = true }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision 0a385323a02a3fb2cfb22d0e8892ae9a2d7ca484)
-+++ app/build.gradle	(date 1619167685149)
-@@ -43,7 +43,7 @@
-     implementation 'com.google.android.gms:play-services-auth:19.0.0'
-     implementation 'com.google.android.material:material:1.3.0'
-     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
--
-+    implementation 'com.github.d-max:spots-dialog:1.1@aar'
-     implementation 'com.firebaseui:firebase-ui-database:7.1.1'
-     implementation 'com.github.bumptech.glide:glide:4.12.0'
-     implementation 'androidx.preference:preference:1.1.1'
-@@ -54,6 +54,11 @@
-     implementation 'com.squareup.picasso:picasso:2.71828'
-     implementation 'com.google.firebase:firebase-storage:19.2.2'
- 
-+    //for notification
-+    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
-+    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
-+    implementation 'com.google.firebase:firebase-messaging'
-+
-     testImplementation 'junit:junit:4.12'
-     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
-     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27__Default_Changelist_.xml	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27__Default_Changelist_.xml	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_23-04-2021_20_27_[Default_Changelist]" date="1619189837118" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-04-2021 20:27 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.chatapplication\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n\r\n        <activity android:name=\".ForgetPasswordActivity\" />\r\n        <activity android:name=\".VideoCallActivity\" />\r\n        <activity android:name=\".AddFriendActivity\" />\r\n        <activity android:name=\".CreateGroupActivity\" />\r\n        <activity android:name=\".SettingsActivity\" />\r\n        <activity android:name=\".GroupChatActivity\" />\r\n        <activity android:name=\".GroupProfile\" />\r\n        <activity android:name=\".ChatDetailActivity\" />\r\n        <activity android:name=\".SignInActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SignUpActivity\" />\r\n        <activity android:name=\".MainActivity\" />\r\n\r\n\r\n        <service\r\n            android:name=\".Notfications.MyFirebaseIdService\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.INSTANCE_ID_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n        <service\r\n            android:name=\".Notfications.MyFirebaseMessagingService\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n    </application>\r\n\r\n    <uses-feature android:name=\"android.hardware.camera2\" />\r\n    <uses-feature android:name=\"android.hardware.camera2.autofocus\" />\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <!--<uses-permission android:name=\"android.permission.WAKE_LOCK\" /> --><!-- PubNub Dependencies -->\r\n    <!-- <uses-permission android:name=\"android.permission.INTERNET\" /> -->\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n    <uses-permission\r\n        android:name=\"com.example.chatapplication.permission.C2D_MESSAGE\"\r\n        android:protectionLevel=\"signature\" />\r\n\r\n    <uses-permission android:name=\"com.example.chatapplicationpermission.C2D_MESSAGE\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
+++ app/src/main/AndroidManifest.xml	(date 1619806932013)
@@ -11,7 +11,7 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme"
         android:usesCleartextTraffic="true">
-
+        <activity android:name=".AddGroupMembersActivity"></activity>
         <activity android:name=".ForgetPasswordActivity" />
         <activity android:name=".VideoCallActivity" />
         <activity android:name=".AddFriendActivity" />
@@ -30,7 +30,6 @@
         <activity android:name=".SignUpActivity" />
         <activity android:name=".MainActivity" />
 
-
         <service
             android:name=".Notfications.MyFirebaseIdService"
             android:enabled="true"
@@ -39,7 +38,6 @@
                 <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
             </intent-filter>
         </service>
-
         <service
             android:name=".Notfications.MyFirebaseMessagingService"
             android:enabled="true"
@@ -48,17 +46,14 @@
                 <action android:name="com.google.firebase.MESSAGING_EVENT" />
             </intent-filter>
         </service>
-
     </application>
-
     <uses-feature android:name="android.hardware.camera2" />
-    <uses-feature android:name="android.hardware.camera2.autofocus" />
+    <uses-feature android:name="android.hardware.camera2.autofocus" /> <!-- <uses-permission android:name="android.permission.WAKE_LOCK" /> -->
+    <!-- PubNub Dependencies -->
+    <!-- <uses-permission android:name="android.permission.INTERNET" /> -->
     <uses-feature
         android:glEsVersion="0x00020000"
         android:required="true" />
-
-    <!--<uses-permission android:name="android.permission.WAKE_LOCK" /> --><!-- PubNub Dependencies -->
-    <!-- <uses-permission android:name="android.permission.INTERNET" /> -->
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
Index: app/src/main/res/layout/activity_add_friend.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#ffffff\"\r\n    tools:context=\".AddFriendActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/heading_label\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:layout_marginLeft=\"30dp\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:fontFamily=\"@font/nunito_bold\"\r\n        android:text=\"Add Friend\"\r\n        android:textColor=\"#555555\"\r\n        android:textSize=\"24sp\" />\r\n\r\n\r\n    <EditText\r\n        android:id=\"@+id/search_field\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignStart=\"@+id/heading_label\"\r\n        android:layout_below=\"@+id/heading_label\"\r\n        android:layout_marginRight=\"20dp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_toStartOf=\"@+id/search_btn\"\r\n        android:background=\"@drawable/search_layout\"\r\n        android:ems=\"10\"\r\n        android:fontFamily=\"@font/nunito_semibold\"\r\n        android:hint=\"Search here\"\r\n        android:inputType=\"textPersonName\"\r\n        android:paddingBottom=\"10dp\"\r\n        android:paddingLeft=\"20dp\"\r\n        android:paddingRight=\"20dp\"\r\n        android:paddingTop=\"10dp\"\r\n        android:textColor=\"#999999\"\r\n        android:textSize=\"16sp\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/search_btn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignBottom=\"@+id/search_field\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_alignTop=\"@+id/search_field\"\r\n        android:layout_marginRight=\"30dp\"\r\n        android:background=\"@android:color/background_light\"\r\n        app:srcCompat=\"@mipmap/search_button\" />\r\n\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/resultList\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@+id/search_field\"\r\n        android:layout_marginTop=\"50dp\">\r\n    </androidx.recyclerview.widget.RecyclerView>\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_add_friend.xml	(revision d5c495e4ace4213ad3009b63cd64f42681ddb5dc)
+++ app/src/main/res/layout/activity_add_friend.xml	(date 1619806933809)
@@ -14,7 +14,7 @@
         android:layout_alignParentStart="true"
         android:layout_alignParentTop="true"
         android:layout_marginLeft="30dp"
-        android:layout_marginTop="30dp"
+        android:layout_marginTop="5dp"
         android:fontFamily="@font/nunito_bold"
         android:text="Add Friend"
         android:textColor="#555555"
@@ -28,7 +28,7 @@
         android:layout_alignStart="@+id/heading_label"
         android:layout_below="@+id/heading_label"
         android:layout_marginRight="20dp"
-        android:layout_marginTop="20dp"
+        android:layout_marginTop="10dp"
         android:layout_toStartOf="@+id/search_btn"
         android:background="@drawable/search_layout"
         android:ems="10"
@@ -59,7 +59,7 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:layout_below="@+id/search_field"
-        android:layout_marginTop="50dp">
+        android:layout_marginTop="25dp">
     </androidx.recyclerview.widget.RecyclerView>
 
 
