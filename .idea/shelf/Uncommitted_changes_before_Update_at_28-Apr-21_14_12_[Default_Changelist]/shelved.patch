Index: app/src/main/java/com/example/chatapplication/Fragments/GroupFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.chatapplication.Fragments;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.chatapplication.Adapters.UsersAdapter;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.R;\r\nimport com.example.chatapplication.databinding.FragmentChatsBinding;\r\nimport com.example.chatapplication.databinding.FragmentGroupBinding;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class GroupFragment extends Fragment {\r\n\r\n    FragmentGroupBinding binding;\r\n    ArrayList<Users> list = new ArrayList<>();\r\n    FirebaseDatabase database;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        binding = FragmentGroupBinding.inflate(inflater,container,false);\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        UsersAdapter adapter = new UsersAdapter(list,getContext());\r\n        binding.groupRecyclerView.setAdapter(adapter);\r\n\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(getContext());\r\n        binding.groupRecyclerView.setLayoutManager(layoutManager);\r\n\r\n        database.getReference().child(\"Users\").child(FirebaseAuth.getInstance().getUid()).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                list.clear();\r\n                Users user = snapshot.getValue(Users.class);\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        return binding.getRoot();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/chatapplication/Fragments/GroupFragment.java	(revision 8cd2db8bbabc12061d1b784111c1dcb84798f7ad)
+++ app/src/main/java/com/example/chatapplication/Fragments/GroupFragment.java	(date 1619504076238)
@@ -5,6 +5,7 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.view.LayoutInflater;
 import android.view.View;
@@ -18,6 +19,7 @@
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
 
@@ -28,6 +30,14 @@
     FragmentGroupBinding binding;
     ArrayList<Users> list = new ArrayList<>();
     FirebaseDatabase database;
+    View FriendView;
+    RecyclerView friendList;
+    //ArrayList<String> list = new ArrayList<>();
+    //ArrayList<Users> list = new ArrayList<>();
+    DatabaseReference frdRef, usersRef;
+    FirebaseAuth auth;
+    String currentUserId;
+
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
Index: app/src/main/java/com/example/chatapplication/CreateGroupActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.chatapplication.Fragments.ChatsFragment;\r\nimport com.example.chatapplication.Models.Friend;\r\nimport com.example.chatapplication.Models.Group;\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.databinding.ActivityAddFriendBinding;\r\nimport com.example.chatapplication.databinding.ActivityCreateGroupBinding;\r\nimport com.example.chatapplication.databinding.FragmentChatsBinding;\r\nimport com.firebase.ui.database.FirebaseRecyclerAdapter;\r\nimport com.firebase.ui.database.FirebaseRecyclerOptions;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\npublic class CreateGroupActivity extends AppCompatActivity {\r\n    View FriendView;\r\n    RecyclerView friendList;\r\n    ActivityCreateGroupBinding binding;\r\n    static ArrayList<Users> list = new ArrayList<>();\r\n    static ArrayList<String> selectedUsers = new ArrayList<>();\r\n    FirebaseDatabase database;\r\n    DatabaseReference frdRef, usersRef;\r\n    FirebaseAuth auth;\r\n    FirebaseStorage storage;\r\n    String currentUserId;\r\n    ProgressDialog progressDialog;\r\n    Uri sFile;\r\n    boolean isSelectMode = false;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityCreateGroupBinding.inflate(getLayoutInflater());\r\n        //setContentView(R.layout.activity_create_group);\r\n        setContentView(binding.getRoot());\r\n        friendList = (RecyclerView) findViewById(R.id.chatRecyclerView);\r\n        friendList.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        auth = FirebaseAuth.getInstance();\r\n        storage = FirebaseStorage.getInstance();\r\n        currentUserId = auth.getCurrentUser().getUid();\r\n        frdRef = FirebaseDatabase.getInstance().getReference().child(\"UsersFriend\").child(currentUserId);\r\n        usersRef = FirebaseDatabase.getInstance().getReference().child(\"Users\");\r\n        progressDialog = new ProgressDialog(CreateGroupActivity.this);\r\n        progressDialog.setTitle(\"Setting up Group\");\r\n        progressDialog.setMessage(\"Uploading Group Icon...\");\r\n\r\n\r\n        FirebaseRecyclerOptions options = new FirebaseRecyclerOptions.Builder<Friend>()\r\n                .setQuery(frdRef, Friend.class).build();\r\n\r\n        FirebaseRecyclerAdapter<Friend, CreateGroupActivity.FriendViewHolder> adapter = new FirebaseRecyclerAdapter<Friend, CreateGroupActivity.FriendViewHolder>(options) {\r\n            @Override\r\n            protected void onBindViewHolder(@NonNull FriendViewHolder holder, int position, @NonNull Friend model) {\r\n                String usersIds = getRef(position).getKey();\r\n                final Users[] users = {new Users()};\r\n\r\n                usersRef.child(usersIds).addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        users[0] = snapshot.getValue(Users.class);\r\n                        /*String profilePic = snapshot.child(\"profilepic\").getValue().toString();\r\n                        String username = snapshot.child(\"userName\").getValue().toString();\r\n*/\r\n                        holder.userName.setText(users[0].getUserName());\r\n                        Picasso.get().load(users[0].getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"chats\").child(currentUserId+users[0].getUserId()).orderByChild(\"timestamp\")\r\n                                .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if(snapshot.hasChildren()){\r\n                                    for (DataSnapshot snapshot1: snapshot.getChildren()){\r\n                                        if((snapshot1.child(\"type\").getValue().toString()).equals(\"text\"))\r\n                                            holder.lastMessage.setText(snapshot1.child(\"message\").getValue(String.class));\r\n                                        else\r\n                                            holder.lastMessage.setText(\"image\");\r\n                                    }\r\n                                }\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n               /* holder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n                    @Override\r\n                    public boolean onLongClick(View v) {\r\n                        isSelectMode = true;\r\n                        if(selectedUsers.contains(users[0])) {\r\n                            holder.itemView.setBackgroundColor(Color.TRANSPARENT);\r\n                            selectedUsers.remove(users[0]);\r\n                        }\r\n                        else {\r\n                            holder.itemView.setBackgroundColor(Color.CYAN);\r\n                            selectedUsers.add(users[0]);\r\n                        }\r\n                        if(selectedUsers.size() == 0)\r\n                            isSelectMode = false;\r\n                        return true;\r\n                    }\r\n                });*/\r\n                holder.itemView.setOnClickListener((view) -> {\r\n                    if(true) {\r\n                        if(selectedUsers.contains(users[0].getUserId())) {\r\n                            holder.itemView.setBackgroundColor(Color.TRANSPARENT);\r\n                            selectedUsers.remove(users[0].getUserId());\r\n                        }\r\n                        else {\r\n                            holder.itemView.setBackgroundColor(Color.CYAN);\r\n                            selectedUsers.add(users[0].getUserId());\r\n                        }\r\n                        if(selectedUsers.size() == 0)\r\n                            isSelectMode = false;\r\n                    }\r\n                });\r\n            }\r\n\r\n            @NonNull\r\n            @Override\r\n            public CreateGroupActivity.FriendViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.sample_show_user,parent,false);\r\n                CreateGroupActivity.FriendViewHolder viewHolder = new CreateGroupActivity.FriendViewHolder(view);\r\n                return viewHolder;\r\n            }\r\n        };\r\n        friendList.setAdapter(adapter);\r\n        adapter.startListening();\r\n\r\n        binding.creategroup.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(binding.txgroupname.getText().toString().isEmpty())\r\n                    Toast.makeText(CreateGroupActivity.this, \"Group Name cant be empty\", Toast.LENGTH_SHORT).show();\r\n                else {\r\n                    progressDialog.show();\r\n                    String gname = binding.txgroupname.getText().toString();\r\n                    Group newGroup = new Group();\r\n                    newGroup.setGroupAdminId(currentUserId);\r\n                    newGroup.setGroupName(gname);\r\n                    newGroup.setGroupDesc(binding.txgroupdesc.getText().toString());\r\n                    newGroup.setCreatedAt(new Date().getTime());\r\n                    newGroup.setGroupMembers(selectedUsers);\r\n                    DatabaseReference groupMetaRef = FirebaseDatabase.getInstance().getReference().child(\"GroupsMeta\").push();\r\n                    String gId = groupMetaRef.getKey();\r\n                    newGroup.setGroupId(gId);\r\n                    if(sFile != null) {\r\n                        final StorageReference reference = storage.getReference().child(\"group_pictures\")\r\n                                .child(gId);\r\n                        reference.putFile(sFile).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                            @Override\r\n                            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                                reference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                                    @Override\r\n                                    public void onSuccess(Uri uri) {\r\n                                        FirebaseDatabase.getInstance().getReference().child(\"GroupsMeta\").child(gId)\r\n                                                .child(\"groupIcon\").setValue(uri.toString());\r\n\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                    groupMetaRef.setValue(newGroup).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            Toast.makeText(CreateGroupActivity.this, \"Group Created\", Toast.LENGTH_SHORT).show();\r\n                            Intent intent = new Intent(CreateGroupActivity.this, MainActivity.class);\r\n                            progressDialog.dismiss();\r\n                            startActivity(intent);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        binding.plus.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent();\r\n                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                intent.setType(\"image/*\");\r\n                startActivityForResult(intent, 33);\r\n            }\r\n        });\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(data.getData() != null) {\r\n            sFile = data.getData();\r\n            binding.groupicon.setImageURI(sFile);\r\n        }\r\n    }\r\n\r\n\r\n/*\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        FirebaseRecyclerOptions options = new FirebaseRecyclerOptions.Builder<Friend>()\r\n                .setQuery(frdRef, Friend.class).build();\r\n\r\n        FirebaseRecyclerAdapter<Friend, CreateGroupActivity.FriendViewHolder> adapter = new FirebaseRecyclerAdapter<Friend, CreateGroupActivity.FriendViewHolder>(options) {\r\n            @Override\r\n            protected void onBindViewHolder(@NonNull FriendViewHolder holder, int position, @NonNull Friend model) {\r\n                String usersIds = getRef(position).getKey();\r\n                final Users[] users = {new Users()};\r\n                usersRef.child(usersIds).addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        users[0] = snapshot.getValue(Users.class);\r\n                        /*String profilePic = snapshot.child(\"profilepic\").getValue().toString();\r\n                        String username = snapshot.child(\"userName\").getValue().toString();\r\n\r\n                        holder.userName.setText(users[0].getUserName());\r\n                        Picasso.get().load(users[0].getProfilepic()).placeholder(R.drawable.avatar).into(holder.image);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"chats\").child(currentUserId+users[0].getUserId()).orderByChild(\"timestamp\")\r\n                                .limitToLast(1).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if(snapshot.hasChildren()){\r\n                                    for (DataSnapshot snapshot1: snapshot.getChildren()){\r\n                                        if((snapshot1.child(\"type\").getValue().toString()).equals(\"text\"))\r\n                                            holder.lastMessage.setText(snapshot1.child(\"message\").getValue(String.class));\r\n                                        else\r\n                                            holder.lastMessage.setText(\"image\");\r\n                                    }\r\n                                }\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n                holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Intent intent = new Intent(this, ChatDetailActivity.class);\r\n                        intent.putExtra(\"userId\", users[0].getUserId());\r\n                        intent.putExtra(\"profilePic\", users[0].getProfilepic());\r\n                        intent.putExtra(\"userName\", users[0].getUserName());\r\n                        getContext().startActivity(intent);\r\n                    }\r\n                });\r\n            }\r\n\r\n            @NonNull\r\n            @Override\r\n            public CreateGroupActivity.FriendViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n                View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.sample_show_user,parent,false);\r\n                CreateGroupActivity.FriendViewHolder viewHolder = new CreateGroupActivity.FriendViewHolder(view);\r\n                return viewHolder;\r\n            }\r\n        };\r\n        friendList.setAdapter(adapter);\r\n        adapter.startListening();\r\n    }\r\n*/\r\n    public static class FriendViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView image;\r\n        TextView userName, lastMessage;\r\n\r\n    public FriendViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            image = itemView.findViewById(R.id.profile_image);\r\n            userName = itemView.findViewById(R.id.userNameList);\r\n            lastMessage = itemView.findViewById(R.id.lastMessage);\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/chatapplication/CreateGroupActivity.java	(revision 8cd2db8bbabc12061d1b784111c1dcb84798f7ad)
+++ app/src/main/java/com/example/chatapplication/CreateGroupActivity.java	(date 1619504903112)
@@ -197,6 +197,18 @@
                             }
                         });
                     }
+                    FirebaseDatabase.getInstance().getReference().child("UsersGroups").child(currentUserId).child(gId)
+                            .addListenerForSingleValueEvent(new ValueEventListener() {
+                        @Override
+                        public void onDataChange(@NonNull DataSnapshot snapshot) {
+
+                        }
+
+                        @Override
+                        public void onCancelled(@NonNull DatabaseError error) {
+
+                        }
+                    });
                     groupMetaRef.setValue(newGroup).addOnSuccessListener(new OnSuccessListener<Void>() {
                         @Override
                         public void onSuccess(Void aVoid) {
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00__Default_Changelist_.xml	(revision 8cd2db8bbabc12061d1b784111c1dcb84798f7ad)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00__Default_Changelist_.xml	(revision 8cd2db8bbabc12061d1b784111c1dcb84798f7ad)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_21-04-2021_07_00_[Default_Changelist]" date="1618968619212" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 21-04-2021 07:00 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00_[Default_Changelist]/shelved.patch	(revision 8cd2db8bbabc12061d1b784111c1dcb84798f7ad)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_21-04-2021_07_00_[Default_Changelist]/shelved.patch	(revision 8cd2db8bbabc12061d1b784111c1dcb84798f7ad)
@@ -1,236 +0,0 @@
-Index: app/src/main/java/com/example/chatapplication/SignUpActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.chatapplication.Models.Users;\r\nimport com.example.chatapplication.databinding.ActivitySignUpBinding;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\npublic class SignUpActivity extends AppCompatActivity {\r\n\r\n    ActivitySignUpBinding binding;\r\n    private FirebaseAuth auth;\r\n    FirebaseDatabase database;\r\n    ProgressDialog progressDialog;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivitySignUpBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        getSupportActionBar().hide();\r\n        auth = FirebaseAuth.getInstance();\r\n        database = FirebaseDatabase.getInstance();\r\n\r\n        progressDialog = new ProgressDialog(SignUpActivity.this);\r\n        progressDialog.setTitle(\"Creating Account\");\r\n        progressDialog.setMessage(\"We're creating your account\");\r\n\r\n        binding.btnSignup.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String userName = binding.etuserName.getText().toString();\r\n                String email = binding.etemail.getText().toString();\r\n                String password = binding.etPassword.getText().toString();\r\n                if( userName.length() == 0 ){\r\n                    binding.etuserName.requestFocus();\r\n                    binding.etuserName.setError(\"Username can not be empty\");\r\n                }else if(!userName.matches(\"[a-zA-Z]+\")){\r\n                    binding.etuserName.requestFocus();\r\n                    binding.etuserName.setError(\"Enter only alphabetical character.\");\r\n                }else if(email.length() == 0){\r\n                    binding.etemail.requestFocus();\r\n                    binding.etemail.setError(\"Email Address can not be empty\");\r\n                }else if(!email.matches(\"^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$\")){\r\n                    binding.etemail.requestFocus();\r\n                    binding.etemail.setError(\"Enter valid email\");\r\n                } else if(password.length() < 8){\r\n                    binding.etPassword.requestFocus();\r\n                    binding.etPassword.setError(\"Password can not be less than 8\");\r\n                }else {\r\n                    progressDialog.show();\r\n                    auth.createUserWithEmailAndPassword\r\n                            (binding.etemail.getText().toString(), binding.etPassword.getText().toString()).\r\n                            addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                    progressDialog.dismiss();\r\n                                    if (task.isSuccessful()) {\r\n                                        Users user = new Users(binding.etuserName.getText().toString(), binding.etemail.getText().toString(),\r\n                                                binding.etPassword.getText().toString());\r\n\r\n                                        String id = task.getResult().getUser().getUid();\r\n                                        database.getReference().child(\"Users\").child(id).setValue(user);\r\n\r\n                                        Toast.makeText(SignUpActivity.this, \"User Created Successfully\", Toast.LENGTH_SHORT).show();\r\n                                    } else {\r\n                                        Toast.makeText(SignUpActivity.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                                    }\r\n\r\n                                }\r\n                            });\r\n                    Intent intent = new Intent(SignUpActivity.this,MainActivity.class);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n        binding.tvalreadyhaveaccount.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(SignUpActivity.this, SignInActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/SignUpActivity.java	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-+++ app/src/main/java/com/example/chatapplication/SignUpActivity.java	(date 1618909381908)
-@@ -72,22 +72,26 @@
-                                     if (task.isSuccessful()) {
-                                         Users user = new Users(binding.etuserName.getText().toString(), binding.etemail.getText().toString(),
-                                                 binding.etPassword.getText().toString());
--
-                                         String id = task.getResult().getUser().getUid();
-                                         database.getReference().child("Users").child(id).setValue(user);
- 
--                                        Toast.makeText(SignUpActivity.this, "User Created Successfully", Toast.LENGTH_SHORT).show();
-+                                       Toast.makeText(SignUpActivity.this, "User Created Successfully", Toast.LENGTH_SHORT).show();
-+                                        Intent intent = new Intent(SignUpActivity.this,MainActivity.class);
-+                                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-+                                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+                                        intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
-+                                        startActivity(intent);
-                                     } else {
-                                         Toast.makeText(SignUpActivity.this, task.getException().getMessage(), Toast.LENGTH_SHORT).show();
-                                     }
- 
-                                 }
-                             });
--                    Intent intent = new Intent(SignUpActivity.this,MainActivity.class);
-+                 /*   Intent intent = new Intent(SignUpActivity.this,MainActivity.class);
-                     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                     intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-                     intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
--                    startActivity(intent);
-+                    startActivity(intent); */
-                 }
-             }
-         });
-Index: app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication.Adapters;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.chatapplication.Models.MessagesModel;\r\nimport com.example.chatapplication.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.squareup.picasso.Picasso;\r\nimport com.squareup.picasso.Target;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\npublic class ChatAdapter extends  RecyclerView.Adapter {\r\n\r\n    ArrayList <MessagesModel> messagesModels;\r\n    Context context;\r\n    String recId;\r\n\r\n    int SENDER_VIEW_TYPE = 1;\r\n    int RECEIVER_VIEW_TYPE = 2;\r\n    int SENDER_VIEW_TYPE_IMAGE=3;\r\n    int RECEIVER_VIEW_TYPE_IMAGE=4;\r\n\r\n    public ChatAdapter(ArrayList<MessagesModel> messagesModels, Context context) {\r\n        this.messagesModels = messagesModels;\r\n        this.context = context;\r\n    }\r\n\r\n    public ChatAdapter(ArrayList<MessagesModel> messagesModels, Context context, String recId) {\r\n        this.messagesModels = messagesModels;\r\n        this.context = context;\r\n        this.recId = recId;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        if (viewType==SENDER_VIEW_TYPE) {\r\n           View  view = LayoutInflater.from( context ).inflate(R.layout.sample_sender ,parent ,false);\r\n           return new SenderViewHolder(view);\r\n        }\r\n        else if(viewType==SENDER_VIEW_TYPE_IMAGE)\r\n        {\r\n            View  view = LayoutInflater.from( context ).inflate(R.layout.sample_sender_image ,parent ,false);\r\n            return new SenderViewHolderImage(view);\r\n        }\r\n        else if(viewType==RECEIVER_VIEW_TYPE_IMAGE){\r\n            View  view = LayoutInflater.from( context ).inflate(R.layout.sample_receiver_image ,parent ,false);\r\n            return new ReceiverViewHolderImage(view);\r\n        }\r\n        else {\r\n            View  view;\r\n            view = LayoutInflater.from( context ).inflate(R.layout.sample_receiver ,parent ,false);\r\n            return new ReceiverViewHolder(view);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\r\n     MessagesModel messagesModel = messagesModels.get(position);\r\n\r\n     holder.itemView.setOnLongClickListener(new View.OnLongClickListener() {\r\n         @Override\r\n         public boolean onLongClick(View v) {\r\n             new AlertDialog.Builder(context).setTitle(\"Delete\").setMessage(\"Are you sure you want to delete this message\")\r\n                     .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                         @Override\r\n                         public void onClick(DialogInterface dialog, int which) {\r\n                             FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n                             String senderRoom = FirebaseAuth.getInstance().getUid() + recId;\r\n                             database.getReference().child(\"chats\").child(senderRoom)\r\n                                     .child(messagesModel.getMessageId()).setValue(null);\r\n                         }\r\n                     }).setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\r\n                 @Override\r\n                 public void onClick(DialogInterface dialog, int which) {\r\n                     dialog.dismiss();;\r\n                 }\r\n             }).show();\r\n\r\n             return false;\r\n         }\r\n     });\r\n\r\n       if(holder.getClass() == SenderViewHolder.class){\r\n           ((SenderViewHolder) holder).senderMsg.setText(messagesModel.getMessage());\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((SenderViewHolder) holder).senderTime.setText(timeString);\r\n       }\r\n\r\n       else if(holder.getClass()==SenderViewHolderImage.class){\r\n           String url = messagesModel.getMessage().toString();\r\n           Picasso.get().load(url).into(((SenderViewHolderImage)holder).senderImg);\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((SenderViewHolderImage) holder).senderTime.setText(timeString);\r\n       }\r\n       else if(holder.getClass()==ReceiverViewHolderImage.class){\r\n           String url = messagesModel.getMessage().toString();\r\n           Picasso.get().load(url).into(((ReceiverViewHolderImage)holder).receiverImg);\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((ReceiverViewHolderImage) holder).receiverTime.setText(timeString);\r\n       }\r\n       else {\r\n           ((ReceiverViewHolder)holder).receiverMsg.setText(messagesModel.getMessage());\r\n           SimpleDateFormat formatter = new SimpleDateFormat(\"h:mm a\");\r\n           String timeString = formatter.format(new Date(messagesModel.getTimestamp()));\r\n           ((ReceiverViewHolder) holder).receiverTime.setText(timeString);\r\n       }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        if(messagesModels.get(position).getId().equals(FirebaseAuth.getInstance().getUid())){\r\n\r\n            if(messagesModels.get(position).getType().equals(\"image\"))\r\n                  return SENDER_VIEW_TYPE_IMAGE;\r\n            return   SENDER_VIEW_TYPE;\r\n        }\r\n        else{\r\n\r\n            if (messagesModels.get(position).getType().equals(\"image\"))\r\n                return RECEIVER_VIEW_TYPE_IMAGE;\r\n            return RECEIVER_VIEW_TYPE;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return messagesModels.size();\r\n    }\r\n\r\n    public class ReceiverViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView receiverMsg,receiverTime;\r\n\r\n        public ReceiverViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            receiverMsg = itemView.findViewById(R.id.receiverText);\r\n            receiverTime = itemView.findViewById(R.id.receiverTime);\r\n        }\r\n    }\r\n\r\n\r\n    public class ReceiverViewHolderImage extends RecyclerView.ViewHolder {\r\n\r\n        ImageView receiverImg;\r\n        TextView receiverTime;\r\n\r\n        public ReceiverViewHolderImage(@NonNull View itemView) {\r\n            super(itemView);\r\n            receiverImg = itemView.findViewById(R.id.receiverImageView);\r\n            receiverTime = itemView.findViewById(R.id.receiverImageTime);\r\n        }\r\n    }\r\n\r\n    public  class  SenderViewHolder extends  RecyclerView.ViewHolder{\r\n        TextView senderMsg,senderTime;\r\n\r\n        public SenderViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            senderMsg = itemView.findViewById(R.id.senderText);\r\n            senderTime = itemView.findViewById(R.id.sendetTime);\r\n        }\r\n    }\r\n\r\n\r\n    public class SenderViewHolderImage extends RecyclerView.ViewHolder {\r\n\r\n        ImageView senderImg;\r\n        TextView senderTime;\r\n\r\n        public SenderViewHolderImage(@NonNull View itemView) {\r\n            super(itemView);\r\n            senderImg = itemView.findViewById(R.id.senderImageView);\r\n            senderTime = itemView.findViewById(R.id.senderImageTime);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-+++ app/src/main/java/com/example/chatapplication/Adapters/ChatAdapter.java	(date 1618968604716)
-@@ -1,8 +1,14 @@
- package com.example.chatapplication.Adapters;
- 
-+import android.Manifest;
- import android.app.AlertDialog;
- import android.content.Context;
- import android.content.DialogInterface;
-+import android.content.pm.PackageManager;
-+import android.graphics.Bitmap;
-+import android.graphics.BitmapFactory;
-+import android.os.Build;
-+import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
-@@ -16,15 +22,21 @@
- import com.example.chatapplication.R;
- import com.google.firebase.auth.FirebaseAuth;
- import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.storage.StorageReference;
- import com.squareup.picasso.Picasso;
- import com.squareup.picasso.Target;
- 
-+import java.io.File;
-+import java.io.FileNotFoundException;
-+import java.io.FileOutputStream;
-+import java.io.IOException;
- import java.text.SimpleDateFormat;
- import java.util.ArrayList;
- import java.util.Date;
- 
- public class ChatAdapter extends  RecyclerView.Adapter {
- 
-+    private static final int PERMISSION_STORAGE_CODE = 1000;
-     ArrayList <MessagesModel> messagesModels;
-     Context context;
-     String recId;
-@@ -95,7 +107,7 @@
-          }
-      });
- 
--       if(holder.getClass() == SenderViewHolder.class){
-+       if (holder.getClass() == SenderViewHolder.class){
-            ((SenderViewHolder) holder).senderMsg.setText(messagesModel.getMessage());
-            SimpleDateFormat formatter = new SimpleDateFormat("h:mm a");
-            String timeString = formatter.format(new Date(messagesModel.getTimestamp()));
-@@ -109,13 +121,16 @@
-            String timeString = formatter.format(new Date(messagesModel.getTimestamp()));
-            ((SenderViewHolderImage) holder).senderTime.setText(timeString);
-        }
-+
-        else if(holder.getClass()==ReceiverViewHolderImage.class){
-+           //Retrieving Url
-            String url = messagesModel.getMessage().toString();
-            Picasso.get().load(url).into(((ReceiverViewHolderImage)holder).receiverImg);
-            SimpleDateFormat formatter = new SimpleDateFormat("h:mm a");
-            String timeString = formatter.format(new Date(messagesModel.getTimestamp()));
-            ((ReceiverViewHolderImage) holder).receiverTime.setText(timeString);
-        }
-+
-        else {
-            ((ReceiverViewHolder)holder).receiverMsg.setText(messagesModel.getMessage());
-            SimpleDateFormat formatter = new SimpleDateFormat("h:mm a");
-@@ -130,13 +145,15 @@
- 
-             if(messagesModels.get(position).getType().equals("image"))
-                   return SENDER_VIEW_TYPE_IMAGE;
--            return   SENDER_VIEW_TYPE;
-+            else
-+                  return   SENDER_VIEW_TYPE;
-         }
-         else{
- 
-             if (messagesModels.get(position).getType().equals("image"))
-                 return RECEIVER_VIEW_TYPE_IMAGE;
--            return RECEIVER_VIEW_TYPE;
-+            else
-+                return RECEIVER_VIEW_TYPE;
-         }
-     }
- 
-Index: app/src/main/java/com/example/chatapplication/Models/Users.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.chatapplication.Models;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Users {\r\n\r\n    String profilepic , userName , mail, password, userId, lastMessage, status;\r\n    ArrayList<String> groupsIds;\r\n    public Users(String profilepic, String userName, String mail, String password, String userId, String lastMessage, String status) {\r\n        this.profilepic = profilepic;\r\n        this.userName = userName;\r\n        this.mail = mail;\r\n        this.password = password;\r\n        this.userId = userId;\r\n        this.lastMessage = lastMessage;\r\n        this.status = status;\r\n    }\r\n\r\n    public Users(){}\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    // SignUp Constructor\r\n    public Users(String userName, String mail, String password) {\r\n        this.userName = userName;\r\n        this.mail = mail;\r\n        this.password = password;\r\n    }\r\n\r\n    public ArrayList<String> getGroups() {\r\n        return groupsIds;\r\n    }\r\n\r\n    public void setGroups(ArrayList<String> groups) { this.groupsIds = groupsIds; }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public String getProfilepic() {\r\n        return profilepic;\r\n    }\r\n\r\n    public void setProfilepic(String profilepic) {\r\n        this.profilepic = profilepic;\r\n    }\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    public void setUserName(String userName) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    public String getMail() {\r\n        return mail;\r\n    }\r\n\r\n    public void setMail(String mail) {\r\n        this.mail = mail;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n//    public String getUserId(String key) {\r\n//\r\n//        return userId;\r\n//    }\r\n//\r\n//    public void setUserId(String userId) {\r\n//\r\n//        this.userId = userId;\r\n//    }\r\n\r\n    public String getLastMessage() {\r\n        return lastMessage;\r\n    }\r\n\r\n    public void setLastMessage(String lastMessage) {\r\n        this.lastMessage = lastMessage;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/chatapplication/Models/Users.java	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-+++ app/src/main/java/com/example/chatapplication/Models/Users.java	(date 1618906783390)
-@@ -16,16 +16,6 @@
-         this.status = status;
-     }
- 
--    public Users(){}
--
--    public String getUserId() {
--        return userId;
--    }
--
--    public void setUserId(String userId) {
--        this.userId = userId;
--    }
--
-     // SignUp Constructor
-     public Users(String userName, String mail, String password) {
-         this.userName = userName;
-@@ -33,6 +23,16 @@
-         this.password = password;
-     }
- 
-+    public Users(){}
-+
-+    public String getUserId() {
-+        return userId;
-+    }
-+
-+    public void setUserId(String userId) {
-+        this.userId = userId;
-+    }
-+
-     public ArrayList<String> getGroups() {
-         return groupsIds;
-     }
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.chatapplication\">\r\n\r\n    <uses-feature android:name=\"android.hardware.camera2\" />\r\n    <uses-feature android:name=\"android.hardware.camera2.autofocus\" />\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" /> <!-- PubNub Dependencies -->\r\n    <!-- <uses-permission android:name=\"android.permission.INTERNET\" /> -->\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n    <uses-permission\r\n        android:name=\"com.example.chatapplication.permission.C2D_MESSAGE\"\r\n        android:protectionLevel=\"signature\" />\r\n    <uses-permission android:name=\"com.example.chatapplicationpermission.C2D_MESSAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".ForgetPasswordActivity\"></activity>\r\n        <activity android:name=\".IncomingCall\" />\r\n        <activity android:name=\".VideoCallActivity\" />\r\n        <activity android:name=\".AddFriendActivity\" />\r\n        <activity android:name=\".CreateGroupActivity\" />\r\n        <activity android:name=\".SettingsActivity\" />\r\n        <activity android:name=\".GroupChatActivity\" />\r\n        <activity android:name=\".ChatDetailActivity\" />\r\n        <activity android:name=\".SignInActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".SignUpActivity\" />\r\n        <activity android:name=\".MainActivity\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-+++ app/src/main/AndroidManifest.xml	(date 1618924011811)
-@@ -10,6 +10,7 @@
- 
-     <uses-permission android:name="android.permission.CAMERA" /> <!-- PubNub Dependencies -->
-     <!-- <uses-permission android:name="android.permission.INTERNET" /> -->
-+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
-     <uses-permission android:name="android.permission.RECORD_AUDIO" />
-     <uses-permission android:name="android.permission.INTERNET" />
-     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_18-Apr-21_19_25__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_18-Apr-21_19_25__Default_Changelist_.xml	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_18-Apr-21_19_25__Default_Changelist_.xml	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_18-Apr-21_19_25_[Default_Changelist]" date="1618754163796" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18-Apr-21_19_25_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 18-Apr-21 19:25 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: app/src/main/res/layout/sample_group_receiver.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginLeft=\"5dp\"\r\n    android:layout_marginTop=\"7dp\"\r\n    android:background=\"@drawable/bg_receiver\"\r\n    android:maxWidth=\"310dp\"\r\n    android:maxHeight=\"400dp\"\r\n    android:minHeight=\"30dp\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/receiverName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"5dp\"\r\n        android:text=\"Receiver Name\"\r\n        android:textSize=\"16sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/guideline3\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/receiverText\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:inputType=\"textLongMessage|textMultiLine|text\"\r\n        android:maxWidth=\"270dp\"\r\n        android:minWidth=\"50dp\"\r\n        android:text=\"Message\"\r\n        app:layout_constraintStart_toStartOf=\"@+id/guideline3\"\r\n        app:layout_constraintEnd_toStartOf=\"@id/guideline1\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/receiverName\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/receiverTime\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginLeft=\"5dp\"\r\n        android:layout_marginTop=\"-5dp\"\r\n        android:layout_marginRight=\"3dp\"\r\n        android:layout_marginBottom=\"3dp\"\r\n        android:text=\"11:00AM\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/receiverText\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toStartOf=\"@id/guideline1\"\r\n        />\r\n\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline3\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_begin=\"16dp\"\r\n        app:layout_editor_absoluteX=\"16dp\" />\r\n\r\n    <androidx.constraintlayout.widget.Guideline\r\n        android:id=\"@+id/guideline1\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintGuide_end=\"5dp\"\r\n        />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/sample_group_receiver.xml	(revision 74f07a405f37f34a35e03cfc56f7822204a82c20)
-+++ app/src/main/res/layout/sample_group_receiver.xml	(date 1618802574649)
-@@ -23,7 +23,7 @@
-         app:layout_constraintTop_toTopOf="parent" />
- 
-     <TextView
--        android:id="@+id/receiverText"
-+        android:id="@+id/receiverTextG"
-         android:layout_width="wrap_content"
-         android:layout_height="wrap_content"
-         android:layout_marginStart="8dp"
-@@ -36,7 +36,7 @@
-         app:layout_constraintTop_toBottomOf="@+id/receiverName" />
- 
-     <TextView
--        android:id="@+id/receiverTime"
-+        android:id="@+id/receiverTimeG"
-         android:layout_width="wrap_content"
-         android:layout_height="wrap_content"
-         android:layout_marginLeft="5dp"
-@@ -44,7 +44,7 @@
-         android:layout_marginRight="3dp"
-         android:layout_marginBottom="3dp"
-         android:text="11:00AM"
--        app:layout_constraintTop_toBottomOf="@+id/receiverText"
-+        app:layout_constraintTop_toBottomOf="@+id/receiverTextG"
-         app:layout_constraintBottom_toBottomOf="parent"
-         app:layout_constraintEnd_toStartOf="@id/guideline1"
-         />
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_25-Apr-21_18_35__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_25-Apr-21_18_35__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_23-04-2021_20_27__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_25-Apr-21_11_03__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_25-Apr-21_11_03__Default_Changelist_.xml
